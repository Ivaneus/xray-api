// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/proxyman/command/command.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_app_2fproxyman_2fcommand_2fcommand_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_app_2fproxyman_2fcommand_2fcommand_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/protocol/user.pb.h"
#include "common/serial/typed_message.pb.h"
#include "core/config.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_app_2fproxyman_2fcommand_2fcommand_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_app_2fproxyman_2fcommand_2fcommand_2eproto;
namespace xray {
namespace app {
namespace proxyman {
namespace command {
class AddInboundRequest;
struct AddInboundRequestDefaultTypeInternal;
extern AddInboundRequestDefaultTypeInternal _AddInboundRequest_default_instance_;
class AddInboundResponse;
struct AddInboundResponseDefaultTypeInternal;
extern AddInboundResponseDefaultTypeInternal _AddInboundResponse_default_instance_;
class AddOutboundRequest;
struct AddOutboundRequestDefaultTypeInternal;
extern AddOutboundRequestDefaultTypeInternal _AddOutboundRequest_default_instance_;
class AddOutboundResponse;
struct AddOutboundResponseDefaultTypeInternal;
extern AddOutboundResponseDefaultTypeInternal _AddOutboundResponse_default_instance_;
class AddUserOperation;
struct AddUserOperationDefaultTypeInternal;
extern AddUserOperationDefaultTypeInternal _AddUserOperation_default_instance_;
class AlterInboundRequest;
struct AlterInboundRequestDefaultTypeInternal;
extern AlterInboundRequestDefaultTypeInternal _AlterInboundRequest_default_instance_;
class AlterInboundResponse;
struct AlterInboundResponseDefaultTypeInternal;
extern AlterInboundResponseDefaultTypeInternal _AlterInboundResponse_default_instance_;
class AlterOutboundRequest;
struct AlterOutboundRequestDefaultTypeInternal;
extern AlterOutboundRequestDefaultTypeInternal _AlterOutboundRequest_default_instance_;
class AlterOutboundResponse;
struct AlterOutboundResponseDefaultTypeInternal;
extern AlterOutboundResponseDefaultTypeInternal _AlterOutboundResponse_default_instance_;
class Config;
struct ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class RemoveInboundRequest;
struct RemoveInboundRequestDefaultTypeInternal;
extern RemoveInboundRequestDefaultTypeInternal _RemoveInboundRequest_default_instance_;
class RemoveInboundResponse;
struct RemoveInboundResponseDefaultTypeInternal;
extern RemoveInboundResponseDefaultTypeInternal _RemoveInboundResponse_default_instance_;
class RemoveOutboundRequest;
struct RemoveOutboundRequestDefaultTypeInternal;
extern RemoveOutboundRequestDefaultTypeInternal _RemoveOutboundRequest_default_instance_;
class RemoveOutboundResponse;
struct RemoveOutboundResponseDefaultTypeInternal;
extern RemoveOutboundResponseDefaultTypeInternal _RemoveOutboundResponse_default_instance_;
class RemoveUserOperation;
struct RemoveUserOperationDefaultTypeInternal;
extern RemoveUserOperationDefaultTypeInternal _RemoveUserOperation_default_instance_;
}  // namespace command
}  // namespace proxyman
}  // namespace app
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xray {
namespace app {
namespace proxyman {
namespace command {

// ===================================================================


// -------------------------------------------------------------------

class RemoveUserOperation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.RemoveUserOperation) */ {
 public:
  inline RemoveUserOperation() : RemoveUserOperation(nullptr) {}
  ~RemoveUserOperation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveUserOperation(::google::protobuf::internal::ConstantInitialized);

  inline RemoveUserOperation(const RemoveUserOperation& from)
      : RemoveUserOperation(nullptr, from) {}
  RemoveUserOperation(RemoveUserOperation&& from) noexcept
    : RemoveUserOperation() {
    *this = ::std::move(from);
  }

  inline RemoveUserOperation& operator=(const RemoveUserOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveUserOperation& operator=(RemoveUserOperation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveUserOperation& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveUserOperation* internal_default_instance() {
    return reinterpret_cast<const RemoveUserOperation*>(
               &_RemoveUserOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RemoveUserOperation& a, RemoveUserOperation& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveUserOperation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveUserOperation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveUserOperation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveUserOperation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveUserOperation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveUserOperation& from) {
    RemoveUserOperation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveUserOperation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.RemoveUserOperation";
  }
  protected:
  explicit RemoveUserOperation(::google::protobuf::Arena* arena);
  RemoveUserOperation(::google::protobuf::Arena* arena, const RemoveUserOperation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.RemoveUserOperation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class RemoveOutboundResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.RemoveOutboundResponse) */ {
 public:
  inline RemoveOutboundResponse() : RemoveOutboundResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveOutboundResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveOutboundResponse(const RemoveOutboundResponse& from)
      : RemoveOutboundResponse(nullptr, from) {}
  RemoveOutboundResponse(RemoveOutboundResponse&& from) noexcept
    : RemoveOutboundResponse() {
    *this = ::std::move(from);
  }

  inline RemoveOutboundResponse& operator=(const RemoveOutboundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveOutboundResponse& operator=(RemoveOutboundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveOutboundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveOutboundResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveOutboundResponse*>(
               &_RemoveOutboundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(RemoveOutboundResponse& a, RemoveOutboundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveOutboundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveOutboundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveOutboundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveOutboundResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveOutboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveOutboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.RemoveOutboundResponse";
  }
  protected:
  explicit RemoveOutboundResponse(::google::protobuf::Arena* arena);
  RemoveOutboundResponse(::google::protobuf::Arena* arena, const RemoveOutboundResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.RemoveOutboundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class RemoveOutboundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.RemoveOutboundRequest) */ {
 public:
  inline RemoveOutboundRequest() : RemoveOutboundRequest(nullptr) {}
  ~RemoveOutboundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveOutboundRequest(::google::protobuf::internal::ConstantInitialized);

  inline RemoveOutboundRequest(const RemoveOutboundRequest& from)
      : RemoveOutboundRequest(nullptr, from) {}
  RemoveOutboundRequest(RemoveOutboundRequest&& from) noexcept
    : RemoveOutboundRequest() {
    *this = ::std::move(from);
  }

  inline RemoveOutboundRequest& operator=(const RemoveOutboundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveOutboundRequest& operator=(RemoveOutboundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveOutboundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveOutboundRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveOutboundRequest*>(
               &_RemoveOutboundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(RemoveOutboundRequest& a, RemoveOutboundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveOutboundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveOutboundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveOutboundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveOutboundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveOutboundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveOutboundRequest& from) {
    RemoveOutboundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveOutboundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.RemoveOutboundRequest";
  }
  protected:
  explicit RemoveOutboundRequest(::google::protobuf::Arena* arena);
  RemoveOutboundRequest(::google::protobuf::Arena* arena, const RemoveOutboundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
  };
  // string tag = 1;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.RemoveOutboundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr tag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class RemoveInboundResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.RemoveInboundResponse) */ {
 public:
  inline RemoveInboundResponse() : RemoveInboundResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveInboundResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveInboundResponse(const RemoveInboundResponse& from)
      : RemoveInboundResponse(nullptr, from) {}
  RemoveInboundResponse(RemoveInboundResponse&& from) noexcept
    : RemoveInboundResponse() {
    *this = ::std::move(from);
  }

  inline RemoveInboundResponse& operator=(const RemoveInboundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveInboundResponse& operator=(RemoveInboundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveInboundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveInboundResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveInboundResponse*>(
               &_RemoveInboundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RemoveInboundResponse& a, RemoveInboundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveInboundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveInboundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveInboundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveInboundResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveInboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveInboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.RemoveInboundResponse";
  }
  protected:
  explicit RemoveInboundResponse(::google::protobuf::Arena* arena);
  RemoveInboundResponse(::google::protobuf::Arena* arena, const RemoveInboundResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.RemoveInboundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class RemoveInboundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.RemoveInboundRequest) */ {
 public:
  inline RemoveInboundRequest() : RemoveInboundRequest(nullptr) {}
  ~RemoveInboundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveInboundRequest(::google::protobuf::internal::ConstantInitialized);

  inline RemoveInboundRequest(const RemoveInboundRequest& from)
      : RemoveInboundRequest(nullptr, from) {}
  RemoveInboundRequest(RemoveInboundRequest&& from) noexcept
    : RemoveInboundRequest() {
    *this = ::std::move(from);
  }

  inline RemoveInboundRequest& operator=(const RemoveInboundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveInboundRequest& operator=(RemoveInboundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveInboundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveInboundRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveInboundRequest*>(
               &_RemoveInboundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RemoveInboundRequest& a, RemoveInboundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveInboundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveInboundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveInboundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RemoveInboundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveInboundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RemoveInboundRequest& from) {
    RemoveInboundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveInboundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.RemoveInboundRequest";
  }
  protected:
  explicit RemoveInboundRequest(::google::protobuf::Arena* arena);
  RemoveInboundRequest(::google::protobuf::Arena* arena, const RemoveInboundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
  };
  // string tag = 1;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.RemoveInboundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr tag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class Config final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.Config) */ {
 public:
  inline Config() : Config(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Config(::google::protobuf::internal::ConstantInitialized);

  inline Config(const Config& from)
      : Config(nullptr, from) {}
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  inline Config& operator=(Config&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Config& default_instance() {
    return *internal_default_instance();
  }
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }
  inline void Swap(Config* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Config* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Config* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Config& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Config& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.Config";
  }
  protected:
  explicit Config(::google::protobuf::Arena* arena);
  Config(::google::protobuf::Arena* arena, const Config& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.Config)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AlterOutboundResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AlterOutboundResponse) */ {
 public:
  inline AlterOutboundResponse() : AlterOutboundResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AlterOutboundResponse(::google::protobuf::internal::ConstantInitialized);

  inline AlterOutboundResponse(const AlterOutboundResponse& from)
      : AlterOutboundResponse(nullptr, from) {}
  AlterOutboundResponse(AlterOutboundResponse&& from) noexcept
    : AlterOutboundResponse() {
    *this = ::std::move(from);
  }

  inline AlterOutboundResponse& operator=(const AlterOutboundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlterOutboundResponse& operator=(AlterOutboundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlterOutboundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlterOutboundResponse* internal_default_instance() {
    return reinterpret_cast<const AlterOutboundResponse*>(
               &_AlterOutboundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(AlterOutboundResponse& a, AlterOutboundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AlterOutboundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlterOutboundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlterOutboundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AlterOutboundResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AlterOutboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AlterOutboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AlterOutboundResponse";
  }
  protected:
  explicit AlterOutboundResponse(::google::protobuf::Arena* arena);
  AlterOutboundResponse(::google::protobuf::Arena* arena, const AlterOutboundResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AlterOutboundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AlterInboundResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AlterInboundResponse) */ {
 public:
  inline AlterInboundResponse() : AlterInboundResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AlterInboundResponse(::google::protobuf::internal::ConstantInitialized);

  inline AlterInboundResponse(const AlterInboundResponse& from)
      : AlterInboundResponse(nullptr, from) {}
  AlterInboundResponse(AlterInboundResponse&& from) noexcept
    : AlterInboundResponse() {
    *this = ::std::move(from);
  }

  inline AlterInboundResponse& operator=(const AlterInboundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlterInboundResponse& operator=(AlterInboundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlterInboundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlterInboundResponse* internal_default_instance() {
    return reinterpret_cast<const AlterInboundResponse*>(
               &_AlterInboundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AlterInboundResponse& a, AlterInboundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AlterInboundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlterInboundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlterInboundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AlterInboundResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AlterInboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AlterInboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AlterInboundResponse";
  }
  protected:
  explicit AlterInboundResponse(::google::protobuf::Arena* arena);
  AlterInboundResponse(::google::protobuf::Arena* arena, const AlterInboundResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AlterInboundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AddOutboundResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AddOutboundResponse) */ {
 public:
  inline AddOutboundResponse() : AddOutboundResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddOutboundResponse(::google::protobuf::internal::ConstantInitialized);

  inline AddOutboundResponse(const AddOutboundResponse& from)
      : AddOutboundResponse(nullptr, from) {}
  AddOutboundResponse(AddOutboundResponse&& from) noexcept
    : AddOutboundResponse() {
    *this = ::std::move(from);
  }

  inline AddOutboundResponse& operator=(const AddOutboundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddOutboundResponse& operator=(AddOutboundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddOutboundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddOutboundResponse* internal_default_instance() {
    return reinterpret_cast<const AddOutboundResponse*>(
               &_AddOutboundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AddOutboundResponse& a, AddOutboundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddOutboundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddOutboundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddOutboundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddOutboundResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddOutboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddOutboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AddOutboundResponse";
  }
  protected:
  explicit AddOutboundResponse(::google::protobuf::Arena* arena);
  AddOutboundResponse(::google::protobuf::Arena* arena, const AddOutboundResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AddOutboundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AddInboundResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AddInboundResponse) */ {
 public:
  inline AddInboundResponse() : AddInboundResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddInboundResponse(::google::protobuf::internal::ConstantInitialized);

  inline AddInboundResponse(const AddInboundResponse& from)
      : AddInboundResponse(nullptr, from) {}
  AddInboundResponse(AddInboundResponse&& from) noexcept
    : AddInboundResponse() {
    *this = ::std::move(from);
  }

  inline AddInboundResponse& operator=(const AddInboundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddInboundResponse& operator=(AddInboundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddInboundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddInboundResponse* internal_default_instance() {
    return reinterpret_cast<const AddInboundResponse*>(
               &_AddInboundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AddInboundResponse& a, AddInboundResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddInboundResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddInboundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddInboundResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddInboundResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AddInboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AddInboundResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AddInboundResponse";
  }
  protected:
  explicit AddInboundResponse(::google::protobuf::Arena* arena);
  AddInboundResponse(::google::protobuf::Arena* arena, const AddInboundResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AddInboundResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AlterOutboundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AlterOutboundRequest) */ {
 public:
  inline AlterOutboundRequest() : AlterOutboundRequest(nullptr) {}
  ~AlterOutboundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AlterOutboundRequest(::google::protobuf::internal::ConstantInitialized);

  inline AlterOutboundRequest(const AlterOutboundRequest& from)
      : AlterOutboundRequest(nullptr, from) {}
  AlterOutboundRequest(AlterOutboundRequest&& from) noexcept
    : AlterOutboundRequest() {
    *this = ::std::move(from);
  }

  inline AlterOutboundRequest& operator=(const AlterOutboundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlterOutboundRequest& operator=(AlterOutboundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlterOutboundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlterOutboundRequest* internal_default_instance() {
    return reinterpret_cast<const AlterOutboundRequest*>(
               &_AlterOutboundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(AlterOutboundRequest& a, AlterOutboundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AlterOutboundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlterOutboundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlterOutboundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AlterOutboundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlterOutboundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AlterOutboundRequest& from) {
    AlterOutboundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AlterOutboundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AlterOutboundRequest";
  }
  protected:
  explicit AlterOutboundRequest(::google::protobuf::Arena* arena);
  AlterOutboundRequest(::google::protobuf::Arena* arena, const AlterOutboundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
    kOperationFieldNumber = 2,
  };
  // string tag = 1;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // .xray.common.serial.TypedMessage operation = 2;
  bool has_operation() const;
  void clear_operation() ;
  const ::xray::common::serial::TypedMessage& operation() const;
  PROTOBUF_NODISCARD ::xray::common::serial::TypedMessage* release_operation();
  ::xray::common::serial::TypedMessage* mutable_operation();
  void set_allocated_operation(::xray::common::serial::TypedMessage* value);
  void unsafe_arena_set_allocated_operation(::xray::common::serial::TypedMessage* value);
  ::xray::common::serial::TypedMessage* unsafe_arena_release_operation();

  private:
  const ::xray::common::serial::TypedMessage& _internal_operation() const;
  ::xray::common::serial::TypedMessage* _internal_mutable_operation();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AlterOutboundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::xray::common::serial::TypedMessage* operation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AlterInboundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AlterInboundRequest) */ {
 public:
  inline AlterInboundRequest() : AlterInboundRequest(nullptr) {}
  ~AlterInboundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AlterInboundRequest(::google::protobuf::internal::ConstantInitialized);

  inline AlterInboundRequest(const AlterInboundRequest& from)
      : AlterInboundRequest(nullptr, from) {}
  AlterInboundRequest(AlterInboundRequest&& from) noexcept
    : AlterInboundRequest() {
    *this = ::std::move(from);
  }

  inline AlterInboundRequest& operator=(const AlterInboundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlterInboundRequest& operator=(AlterInboundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlterInboundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlterInboundRequest* internal_default_instance() {
    return reinterpret_cast<const AlterInboundRequest*>(
               &_AlterInboundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AlterInboundRequest& a, AlterInboundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AlterInboundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlterInboundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlterInboundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AlterInboundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlterInboundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AlterInboundRequest& from) {
    AlterInboundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AlterInboundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AlterInboundRequest";
  }
  protected:
  explicit AlterInboundRequest(::google::protobuf::Arena* arena);
  AlterInboundRequest(::google::protobuf::Arena* arena, const AlterInboundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
    kOperationFieldNumber = 2,
  };
  // string tag = 1;
  void clear_tag() ;
  const std::string& tag() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tag(Arg_&& arg, Args_... args);
  std::string* mutable_tag();
  PROTOBUF_NODISCARD std::string* release_tag();
  void set_allocated_tag(std::string* value);

  private:
  const std::string& _internal_tag() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tag(
      const std::string& value);
  std::string* _internal_mutable_tag();

  public:
  // .xray.common.serial.TypedMessage operation = 2;
  bool has_operation() const;
  void clear_operation() ;
  const ::xray::common::serial::TypedMessage& operation() const;
  PROTOBUF_NODISCARD ::xray::common::serial::TypedMessage* release_operation();
  ::xray::common::serial::TypedMessage* mutable_operation();
  void set_allocated_operation(::xray::common::serial::TypedMessage* value);
  void unsafe_arena_set_allocated_operation(::xray::common::serial::TypedMessage* value);
  ::xray::common::serial::TypedMessage* unsafe_arena_release_operation();

  private:
  const ::xray::common::serial::TypedMessage& _internal_operation() const;
  ::xray::common::serial::TypedMessage* _internal_mutable_operation();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AlterInboundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      57, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tag_;
    ::xray::common::serial::TypedMessage* operation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AddUserOperation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AddUserOperation) */ {
 public:
  inline AddUserOperation() : AddUserOperation(nullptr) {}
  ~AddUserOperation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddUserOperation(::google::protobuf::internal::ConstantInitialized);

  inline AddUserOperation(const AddUserOperation& from)
      : AddUserOperation(nullptr, from) {}
  AddUserOperation(AddUserOperation&& from) noexcept
    : AddUserOperation() {
    *this = ::std::move(from);
  }

  inline AddUserOperation& operator=(const AddUserOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddUserOperation& operator=(AddUserOperation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddUserOperation& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddUserOperation* internal_default_instance() {
    return reinterpret_cast<const AddUserOperation*>(
               &_AddUserOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AddUserOperation& a, AddUserOperation& b) {
    a.Swap(&b);
  }
  inline void Swap(AddUserOperation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddUserOperation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddUserOperation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddUserOperation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddUserOperation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddUserOperation& from) {
    AddUserOperation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddUserOperation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AddUserOperation";
  }
  protected:
  explicit AddUserOperation(::google::protobuf::Arena* arena);
  AddUserOperation(::google::protobuf::Arena* arena, const AddUserOperation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserFieldNumber = 1,
  };
  // .xray.common.protocol.User user = 1;
  bool has_user() const;
  void clear_user() ;
  const ::xray::common::protocol::User& user() const;
  PROTOBUF_NODISCARD ::xray::common::protocol::User* release_user();
  ::xray::common::protocol::User* mutable_user();
  void set_allocated_user(::xray::common::protocol::User* value);
  void unsafe_arena_set_allocated_user(::xray::common::protocol::User* value);
  ::xray::common::protocol::User* unsafe_arena_release_user();

  private:
  const ::xray::common::protocol::User& _internal_user() const;
  ::xray::common::protocol::User* _internal_mutable_user();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AddUserOperation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xray::common::protocol::User* user_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AddOutboundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AddOutboundRequest) */ {
 public:
  inline AddOutboundRequest() : AddOutboundRequest(nullptr) {}
  ~AddOutboundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddOutboundRequest(::google::protobuf::internal::ConstantInitialized);

  inline AddOutboundRequest(const AddOutboundRequest& from)
      : AddOutboundRequest(nullptr, from) {}
  AddOutboundRequest(AddOutboundRequest&& from) noexcept
    : AddOutboundRequest() {
    *this = ::std::move(from);
  }

  inline AddOutboundRequest& operator=(const AddOutboundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddOutboundRequest& operator=(AddOutboundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddOutboundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddOutboundRequest* internal_default_instance() {
    return reinterpret_cast<const AddOutboundRequest*>(
               &_AddOutboundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AddOutboundRequest& a, AddOutboundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddOutboundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddOutboundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddOutboundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddOutboundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddOutboundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddOutboundRequest& from) {
    AddOutboundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddOutboundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AddOutboundRequest";
  }
  protected:
  explicit AddOutboundRequest(::google::protobuf::Arena* arena);
  AddOutboundRequest(::google::protobuf::Arena* arena, const AddOutboundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutboundFieldNumber = 1,
  };
  // .xray.core.OutboundHandlerConfig outbound = 1;
  bool has_outbound() const;
  void clear_outbound() ;
  const ::xray::core::OutboundHandlerConfig& outbound() const;
  PROTOBUF_NODISCARD ::xray::core::OutboundHandlerConfig* release_outbound();
  ::xray::core::OutboundHandlerConfig* mutable_outbound();
  void set_allocated_outbound(::xray::core::OutboundHandlerConfig* value);
  void unsafe_arena_set_allocated_outbound(::xray::core::OutboundHandlerConfig* value);
  ::xray::core::OutboundHandlerConfig* unsafe_arena_release_outbound();

  private:
  const ::xray::core::OutboundHandlerConfig& _internal_outbound() const;
  ::xray::core::OutboundHandlerConfig* _internal_mutable_outbound();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AddOutboundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xray::core::OutboundHandlerConfig* outbound_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class AddInboundRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.proxyman.command.AddInboundRequest) */ {
 public:
  inline AddInboundRequest() : AddInboundRequest(nullptr) {}
  ~AddInboundRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddInboundRequest(::google::protobuf::internal::ConstantInitialized);

  inline AddInboundRequest(const AddInboundRequest& from)
      : AddInboundRequest(nullptr, from) {}
  AddInboundRequest(AddInboundRequest&& from) noexcept
    : AddInboundRequest() {
    *this = ::std::move(from);
  }

  inline AddInboundRequest& operator=(const AddInboundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddInboundRequest& operator=(AddInboundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddInboundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddInboundRequest* internal_default_instance() {
    return reinterpret_cast<const AddInboundRequest*>(
               &_AddInboundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AddInboundRequest& a, AddInboundRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddInboundRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddInboundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddInboundRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddInboundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddInboundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddInboundRequest& from) {
    AddInboundRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddInboundRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.proxyman.command.AddInboundRequest";
  }
  protected:
  explicit AddInboundRequest(::google::protobuf::Arena* arena);
  AddInboundRequest(::google::protobuf::Arena* arena, const AddInboundRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInboundFieldNumber = 1,
  };
  // .xray.core.InboundHandlerConfig inbound = 1;
  bool has_inbound() const;
  void clear_inbound() ;
  const ::xray::core::InboundHandlerConfig& inbound() const;
  PROTOBUF_NODISCARD ::xray::core::InboundHandlerConfig* release_inbound();
  ::xray::core::InboundHandlerConfig* mutable_inbound();
  void set_allocated_inbound(::xray::core::InboundHandlerConfig* value);
  void unsafe_arena_set_allocated_inbound(::xray::core::InboundHandlerConfig* value);
  ::xray::core::InboundHandlerConfig* unsafe_arena_release_inbound();

  private:
  const ::xray::core::InboundHandlerConfig& _internal_inbound() const;
  ::xray::core::InboundHandlerConfig* _internal_mutable_inbound();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.proxyman.command.AddInboundRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xray::core::InboundHandlerConfig* inbound_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fproxyman_2fcommand_2fcommand_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddUserOperation

// .xray.common.protocol.User user = 1;
inline bool AddUserOperation::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_ != nullptr);
  return value;
}
inline const ::xray::common::protocol::User& AddUserOperation::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::xray::common::protocol::User* p = _impl_.user_;
  return p != nullptr ? *p : reinterpret_cast<const ::xray::common::protocol::User&>(::xray::common::protocol::_User_default_instance_);
}
inline const ::xray::common::protocol::User& AddUserOperation::user() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AddUserOperation.user)
  return _internal_user();
}
inline void AddUserOperation::unsafe_arena_set_allocated_user(::xray::common::protocol::User* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }
  _impl_.user_ = reinterpret_cast<::xray::common::protocol::User*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xray.app.proxyman.command.AddUserOperation.user)
}
inline ::xray::common::protocol::User* AddUserOperation::release_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::common::protocol::User* released = _impl_.user_;
  _impl_.user_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xray::common::protocol::User* AddUserOperation::unsafe_arena_release_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AddUserOperation.user)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::common::protocol::User* temp = _impl_.user_;
  _impl_.user_ = nullptr;
  return temp;
}
inline ::xray::common::protocol::User* AddUserOperation::_internal_mutable_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.user_ == nullptr) {
    auto* p = CreateMaybeMessage<::xray::common::protocol::User>(GetArena());
    _impl_.user_ = reinterpret_cast<::xray::common::protocol::User*>(p);
  }
  return _impl_.user_;
}
inline ::xray::common::protocol::User* AddUserOperation::mutable_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::xray::common::protocol::User* _msg = _internal_mutable_user();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AddUserOperation.user)
  return _msg;
}
inline void AddUserOperation::set_allocated_user(::xray::common::protocol::User* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.user_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.user_ = reinterpret_cast<::xray::common::protocol::User*>(value);
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AddUserOperation.user)
}

// -------------------------------------------------------------------

// RemoveUserOperation

// string email = 1;
inline void RemoveUserOperation::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& RemoveUserOperation::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.RemoveUserOperation.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveUserOperation::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.proxyman.command.RemoveUserOperation.email)
}
inline std::string* RemoveUserOperation::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.RemoveUserOperation.email)
  return _s;
}
inline const std::string& RemoveUserOperation::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void RemoveUserOperation::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* RemoveUserOperation::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* RemoveUserOperation::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.RemoveUserOperation.email)
  return _impl_.email_.Release();
}
inline void RemoveUserOperation::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.RemoveUserOperation.email)
}

// -------------------------------------------------------------------

// AddInboundRequest

// .xray.core.InboundHandlerConfig inbound = 1;
inline bool AddInboundRequest::has_inbound() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inbound_ != nullptr);
  return value;
}
inline const ::xray::core::InboundHandlerConfig& AddInboundRequest::_internal_inbound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::xray::core::InboundHandlerConfig* p = _impl_.inbound_;
  return p != nullptr ? *p : reinterpret_cast<const ::xray::core::InboundHandlerConfig&>(::xray::core::_InboundHandlerConfig_default_instance_);
}
inline const ::xray::core::InboundHandlerConfig& AddInboundRequest::inbound() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AddInboundRequest.inbound)
  return _internal_inbound();
}
inline void AddInboundRequest::unsafe_arena_set_allocated_inbound(::xray::core::InboundHandlerConfig* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inbound_);
  }
  _impl_.inbound_ = reinterpret_cast<::xray::core::InboundHandlerConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xray.app.proxyman.command.AddInboundRequest.inbound)
}
inline ::xray::core::InboundHandlerConfig* AddInboundRequest::release_inbound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::core::InboundHandlerConfig* released = _impl_.inbound_;
  _impl_.inbound_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xray::core::InboundHandlerConfig* AddInboundRequest::unsafe_arena_release_inbound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AddInboundRequest.inbound)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::core::InboundHandlerConfig* temp = _impl_.inbound_;
  _impl_.inbound_ = nullptr;
  return temp;
}
inline ::xray::core::InboundHandlerConfig* AddInboundRequest::_internal_mutable_inbound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.inbound_ == nullptr) {
    auto* p = CreateMaybeMessage<::xray::core::InboundHandlerConfig>(GetArena());
    _impl_.inbound_ = reinterpret_cast<::xray::core::InboundHandlerConfig*>(p);
  }
  return _impl_.inbound_;
}
inline ::xray::core::InboundHandlerConfig* AddInboundRequest::mutable_inbound() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::xray::core::InboundHandlerConfig* _msg = _internal_mutable_inbound();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AddInboundRequest.inbound)
  return _msg;
}
inline void AddInboundRequest::set_allocated_inbound(::xray::core::InboundHandlerConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inbound_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.inbound_ = reinterpret_cast<::xray::core::InboundHandlerConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AddInboundRequest.inbound)
}

// -------------------------------------------------------------------

// AddInboundResponse

// -------------------------------------------------------------------

// RemoveInboundRequest

// string tag = 1;
inline void RemoveInboundRequest::clear_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& RemoveInboundRequest::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.RemoveInboundRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveInboundRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.proxyman.command.RemoveInboundRequest.tag)
}
inline std::string* RemoveInboundRequest::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.RemoveInboundRequest.tag)
  return _s;
}
inline const std::string& RemoveInboundRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void RemoveInboundRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* RemoveInboundRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* RemoveInboundRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.RemoveInboundRequest.tag)
  return _impl_.tag_.Release();
}
inline void RemoveInboundRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.RemoveInboundRequest.tag)
}

// -------------------------------------------------------------------

// RemoveInboundResponse

// -------------------------------------------------------------------

// AlterInboundRequest

// string tag = 1;
inline void AlterInboundRequest::clear_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& AlterInboundRequest::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AlterInboundRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlterInboundRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.proxyman.command.AlterInboundRequest.tag)
}
inline std::string* AlterInboundRequest::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AlterInboundRequest.tag)
  return _s;
}
inline const std::string& AlterInboundRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void AlterInboundRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* AlterInboundRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* AlterInboundRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AlterInboundRequest.tag)
  return _impl_.tag_.Release();
}
inline void AlterInboundRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AlterInboundRequest.tag)
}

// .xray.common.serial.TypedMessage operation = 2;
inline bool AlterInboundRequest::has_operation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.operation_ != nullptr);
  return value;
}
inline const ::xray::common::serial::TypedMessage& AlterInboundRequest::_internal_operation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::xray::common::serial::TypedMessage* p = _impl_.operation_;
  return p != nullptr ? *p : reinterpret_cast<const ::xray::common::serial::TypedMessage&>(::xray::common::serial::_TypedMessage_default_instance_);
}
inline const ::xray::common::serial::TypedMessage& AlterInboundRequest::operation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AlterInboundRequest.operation)
  return _internal_operation();
}
inline void AlterInboundRequest::unsafe_arena_set_allocated_operation(::xray::common::serial::TypedMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.operation_);
  }
  _impl_.operation_ = reinterpret_cast<::xray::common::serial::TypedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xray.app.proxyman.command.AlterInboundRequest.operation)
}
inline ::xray::common::serial::TypedMessage* AlterInboundRequest::release_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::common::serial::TypedMessage* released = _impl_.operation_;
  _impl_.operation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xray::common::serial::TypedMessage* AlterInboundRequest::unsafe_arena_release_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AlterInboundRequest.operation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::common::serial::TypedMessage* temp = _impl_.operation_;
  _impl_.operation_ = nullptr;
  return temp;
}
inline ::xray::common::serial::TypedMessage* AlterInboundRequest::_internal_mutable_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.operation_ == nullptr) {
    auto* p = CreateMaybeMessage<::xray::common::serial::TypedMessage>(GetArena());
    _impl_.operation_ = reinterpret_cast<::xray::common::serial::TypedMessage*>(p);
  }
  return _impl_.operation_;
}
inline ::xray::common::serial::TypedMessage* AlterInboundRequest::mutable_operation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::xray::common::serial::TypedMessage* _msg = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AlterInboundRequest.operation)
  return _msg;
}
inline void AlterInboundRequest::set_allocated_operation(::xray::common::serial::TypedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.operation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.operation_ = reinterpret_cast<::xray::common::serial::TypedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AlterInboundRequest.operation)
}

// -------------------------------------------------------------------

// AlterInboundResponse

// -------------------------------------------------------------------

// AddOutboundRequest

// .xray.core.OutboundHandlerConfig outbound = 1;
inline bool AddOutboundRequest::has_outbound() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outbound_ != nullptr);
  return value;
}
inline const ::xray::core::OutboundHandlerConfig& AddOutboundRequest::_internal_outbound() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::xray::core::OutboundHandlerConfig* p = _impl_.outbound_;
  return p != nullptr ? *p : reinterpret_cast<const ::xray::core::OutboundHandlerConfig&>(::xray::core::_OutboundHandlerConfig_default_instance_);
}
inline const ::xray::core::OutboundHandlerConfig& AddOutboundRequest::outbound() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AddOutboundRequest.outbound)
  return _internal_outbound();
}
inline void AddOutboundRequest::unsafe_arena_set_allocated_outbound(::xray::core::OutboundHandlerConfig* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outbound_);
  }
  _impl_.outbound_ = reinterpret_cast<::xray::core::OutboundHandlerConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xray.app.proxyman.command.AddOutboundRequest.outbound)
}
inline ::xray::core::OutboundHandlerConfig* AddOutboundRequest::release_outbound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::core::OutboundHandlerConfig* released = _impl_.outbound_;
  _impl_.outbound_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xray::core::OutboundHandlerConfig* AddOutboundRequest::unsafe_arena_release_outbound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AddOutboundRequest.outbound)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::core::OutboundHandlerConfig* temp = _impl_.outbound_;
  _impl_.outbound_ = nullptr;
  return temp;
}
inline ::xray::core::OutboundHandlerConfig* AddOutboundRequest::_internal_mutable_outbound() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.outbound_ == nullptr) {
    auto* p = CreateMaybeMessage<::xray::core::OutboundHandlerConfig>(GetArena());
    _impl_.outbound_ = reinterpret_cast<::xray::core::OutboundHandlerConfig*>(p);
  }
  return _impl_.outbound_;
}
inline ::xray::core::OutboundHandlerConfig* AddOutboundRequest::mutable_outbound() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::xray::core::OutboundHandlerConfig* _msg = _internal_mutable_outbound();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AddOutboundRequest.outbound)
  return _msg;
}
inline void AddOutboundRequest::set_allocated_outbound(::xray::core::OutboundHandlerConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outbound_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outbound_ = reinterpret_cast<::xray::core::OutboundHandlerConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AddOutboundRequest.outbound)
}

// -------------------------------------------------------------------

// AddOutboundResponse

// -------------------------------------------------------------------

// RemoveOutboundRequest

// string tag = 1;
inline void RemoveOutboundRequest::clear_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& RemoveOutboundRequest::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.RemoveOutboundRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveOutboundRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.proxyman.command.RemoveOutboundRequest.tag)
}
inline std::string* RemoveOutboundRequest::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.RemoveOutboundRequest.tag)
  return _s;
}
inline const std::string& RemoveOutboundRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void RemoveOutboundRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* RemoveOutboundRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* RemoveOutboundRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.RemoveOutboundRequest.tag)
  return _impl_.tag_.Release();
}
inline void RemoveOutboundRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.RemoveOutboundRequest.tag)
}

// -------------------------------------------------------------------

// RemoveOutboundResponse

// -------------------------------------------------------------------

// AlterOutboundRequest

// string tag = 1;
inline void AlterOutboundRequest::clear_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.ClearToEmpty();
}
inline const std::string& AlterOutboundRequest::tag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AlterOutboundRequest.tag)
  return _internal_tag();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AlterOutboundRequest::set_tag(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.proxyman.command.AlterOutboundRequest.tag)
}
inline std::string* AlterOutboundRequest::mutable_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tag();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AlterOutboundRequest.tag)
  return _s;
}
inline const std::string& AlterOutboundRequest::_internal_tag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tag_.Get();
}
inline void AlterOutboundRequest::_internal_set_tag(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tag_.Set(value, GetArena());
}
inline std::string* AlterOutboundRequest::_internal_mutable_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tag_.Mutable( GetArena());
}
inline std::string* AlterOutboundRequest::release_tag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AlterOutboundRequest.tag)
  return _impl_.tag_.Release();
}
inline void AlterOutboundRequest::set_allocated_tag(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tag_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tag_.IsDefault()) {
          _impl_.tag_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AlterOutboundRequest.tag)
}

// .xray.common.serial.TypedMessage operation = 2;
inline bool AlterOutboundRequest::has_operation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.operation_ != nullptr);
  return value;
}
inline const ::xray::common::serial::TypedMessage& AlterOutboundRequest::_internal_operation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::xray::common::serial::TypedMessage* p = _impl_.operation_;
  return p != nullptr ? *p : reinterpret_cast<const ::xray::common::serial::TypedMessage&>(::xray::common::serial::_TypedMessage_default_instance_);
}
inline const ::xray::common::serial::TypedMessage& AlterOutboundRequest::operation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.proxyman.command.AlterOutboundRequest.operation)
  return _internal_operation();
}
inline void AlterOutboundRequest::unsafe_arena_set_allocated_operation(::xray::common::serial::TypedMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.operation_);
  }
  _impl_.operation_ = reinterpret_cast<::xray::common::serial::TypedMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xray.app.proxyman.command.AlterOutboundRequest.operation)
}
inline ::xray::common::serial::TypedMessage* AlterOutboundRequest::release_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::common::serial::TypedMessage* released = _impl_.operation_;
  _impl_.operation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xray::common::serial::TypedMessage* AlterOutboundRequest::unsafe_arena_release_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.proxyman.command.AlterOutboundRequest.operation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::common::serial::TypedMessage* temp = _impl_.operation_;
  _impl_.operation_ = nullptr;
  return temp;
}
inline ::xray::common::serial::TypedMessage* AlterOutboundRequest::_internal_mutable_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.operation_ == nullptr) {
    auto* p = CreateMaybeMessage<::xray::common::serial::TypedMessage>(GetArena());
    _impl_.operation_ = reinterpret_cast<::xray::common::serial::TypedMessage*>(p);
  }
  return _impl_.operation_;
}
inline ::xray::common::serial::TypedMessage* AlterOutboundRequest::mutable_operation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::xray::common::serial::TypedMessage* _msg = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:xray.app.proxyman.command.AlterOutboundRequest.operation)
  return _msg;
}
inline void AlterOutboundRequest::set_allocated_operation(::xray::common::serial::TypedMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.operation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.operation_ = reinterpret_cast<::xray::common::serial::TypedMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:xray.app.proxyman.command.AlterOutboundRequest.operation)
}

// -------------------------------------------------------------------

// AlterOutboundResponse

// -------------------------------------------------------------------

// Config

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace command
}  // namespace proxyman
}  // namespace app
}  // namespace xray


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_app_2fproxyman_2fcommand_2fcommand_2eproto_2epb_2eh
