// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/stats/command/command.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_app_2fstats_2fcommand_2fcommand_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_app_2fstats_2fcommand_2fcommand_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_app_2fstats_2fcommand_2fcommand_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_app_2fstats_2fcommand_2fcommand_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_app_2fstats_2fcommand_2fcommand_2eproto;
namespace xray {
namespace app {
namespace stats {
namespace command {
class Config;
struct ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
class GetStatsRequest;
struct GetStatsRequestDefaultTypeInternal;
extern GetStatsRequestDefaultTypeInternal _GetStatsRequest_default_instance_;
class GetStatsResponse;
struct GetStatsResponseDefaultTypeInternal;
extern GetStatsResponseDefaultTypeInternal _GetStatsResponse_default_instance_;
class QueryStatsRequest;
struct QueryStatsRequestDefaultTypeInternal;
extern QueryStatsRequestDefaultTypeInternal _QueryStatsRequest_default_instance_;
class QueryStatsResponse;
struct QueryStatsResponseDefaultTypeInternal;
extern QueryStatsResponseDefaultTypeInternal _QueryStatsResponse_default_instance_;
class Stat;
struct StatDefaultTypeInternal;
extern StatDefaultTypeInternal _Stat_default_instance_;
class SysStatsRequest;
struct SysStatsRequestDefaultTypeInternal;
extern SysStatsRequestDefaultTypeInternal _SysStatsRequest_default_instance_;
class SysStatsResponse;
struct SysStatsResponseDefaultTypeInternal;
extern SysStatsResponseDefaultTypeInternal _SysStatsResponse_default_instance_;
}  // namespace command
}  // namespace stats
}  // namespace app
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xray {
namespace app {
namespace stats {
namespace command {

// ===================================================================


// -------------------------------------------------------------------

class SysStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.stats.command.SysStatsResponse) */ {
 public:
  inline SysStatsResponse() : SysStatsResponse(nullptr) {}
  ~SysStatsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SysStatsResponse(::google::protobuf::internal::ConstantInitialized);

  inline SysStatsResponse(const SysStatsResponse& from)
      : SysStatsResponse(nullptr, from) {}
  SysStatsResponse(SysStatsResponse&& from) noexcept
    : SysStatsResponse() {
    *this = ::std::move(from);
  }

  inline SysStatsResponse& operator=(const SysStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysStatsResponse& operator=(SysStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SysStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SysStatsResponse* internal_default_instance() {
    return reinterpret_cast<const SysStatsResponse*>(
               &_SysStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SysStatsResponse& a, SysStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SysStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysStatsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SysStatsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SysStatsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SysStatsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SysStatsResponse& from) {
    SysStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SysStatsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.SysStatsResponse";
  }
  protected:
  explicit SysStatsResponse(::google::protobuf::Arena* arena);
  SysStatsResponse(::google::protobuf::Arena* arena, const SysStatsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumGoroutineFieldNumber = 1,
    kNumGCFieldNumber = 2,
    kAllocFieldNumber = 3,
    kTotalAllocFieldNumber = 4,
    kSysFieldNumber = 5,
    kMallocsFieldNumber = 6,
    kFreesFieldNumber = 7,
    kLiveObjectsFieldNumber = 8,
    kPauseTotalNsFieldNumber = 9,
    kUptimeFieldNumber = 10,
  };
  // uint32 NumGoroutine = 1;
  void clear_numgoroutine() ;
  ::uint32_t numgoroutine() const;
  void set_numgoroutine(::uint32_t value);

  private:
  ::uint32_t _internal_numgoroutine() const;
  void _internal_set_numgoroutine(::uint32_t value);

  public:
  // uint32 NumGC = 2;
  void clear_numgc() ;
  ::uint32_t numgc() const;
  void set_numgc(::uint32_t value);

  private:
  ::uint32_t _internal_numgc() const;
  void _internal_set_numgc(::uint32_t value);

  public:
  // uint64 Alloc = 3;
  void clear_alloc() ;
  ::uint64_t alloc() const;
  void set_alloc(::uint64_t value);

  private:
  ::uint64_t _internal_alloc() const;
  void _internal_set_alloc(::uint64_t value);

  public:
  // uint64 TotalAlloc = 4;
  void clear_totalalloc() ;
  ::uint64_t totalalloc() const;
  void set_totalalloc(::uint64_t value);

  private:
  ::uint64_t _internal_totalalloc() const;
  void _internal_set_totalalloc(::uint64_t value);

  public:
  // uint64 Sys = 5;
  void clear_sys() ;
  ::uint64_t sys() const;
  void set_sys(::uint64_t value);

  private:
  ::uint64_t _internal_sys() const;
  void _internal_set_sys(::uint64_t value);

  public:
  // uint64 Mallocs = 6;
  void clear_mallocs() ;
  ::uint64_t mallocs() const;
  void set_mallocs(::uint64_t value);

  private:
  ::uint64_t _internal_mallocs() const;
  void _internal_set_mallocs(::uint64_t value);

  public:
  // uint64 Frees = 7;
  void clear_frees() ;
  ::uint64_t frees() const;
  void set_frees(::uint64_t value);

  private:
  ::uint64_t _internal_frees() const;
  void _internal_set_frees(::uint64_t value);

  public:
  // uint64 LiveObjects = 8;
  void clear_liveobjects() ;
  ::uint64_t liveobjects() const;
  void set_liveobjects(::uint64_t value);

  private:
  ::uint64_t _internal_liveobjects() const;
  void _internal_set_liveobjects(::uint64_t value);

  public:
  // uint64 PauseTotalNs = 9;
  void clear_pausetotalns() ;
  ::uint64_t pausetotalns() const;
  void set_pausetotalns(::uint64_t value);

  private:
  ::uint64_t _internal_pausetotalns() const;
  void _internal_set_pausetotalns(::uint64_t value);

  public:
  // uint32 Uptime = 10;
  void clear_uptime() ;
  ::uint32_t uptime() const;
  void set_uptime(::uint32_t value);

  private:
  ::uint32_t _internal_uptime() const;
  void _internal_set_uptime(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:xray.app.stats.command.SysStatsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t numgoroutine_;
    ::uint32_t numgc_;
    ::uint64_t alloc_;
    ::uint64_t totalalloc_;
    ::uint64_t sys_;
    ::uint64_t mallocs_;
    ::uint64_t frees_;
    ::uint64_t liveobjects_;
    ::uint64_t pausetotalns_;
    ::uint32_t uptime_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class SysStatsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.stats.command.SysStatsRequest) */ {
 public:
  inline SysStatsRequest() : SysStatsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SysStatsRequest(::google::protobuf::internal::ConstantInitialized);

  inline SysStatsRequest(const SysStatsRequest& from)
      : SysStatsRequest(nullptr, from) {}
  SysStatsRequest(SysStatsRequest&& from) noexcept
    : SysStatsRequest() {
    *this = ::std::move(from);
  }

  inline SysStatsRequest& operator=(const SysStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SysStatsRequest& operator=(SysStatsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SysStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SysStatsRequest* internal_default_instance() {
    return reinterpret_cast<const SysStatsRequest*>(
               &_SysStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SysStatsRequest& a, SysStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SysStatsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SysStatsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SysStatsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SysStatsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SysStatsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SysStatsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.SysStatsRequest";
  }
  protected:
  explicit SysStatsRequest(::google::protobuf::Arena* arena);
  SysStatsRequest(::google::protobuf::Arena* arena, const SysStatsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.stats.command.SysStatsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class Stat final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.stats.command.Stat) */ {
 public:
  inline Stat() : Stat(nullptr) {}
  ~Stat() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Stat(::google::protobuf::internal::ConstantInitialized);

  inline Stat(const Stat& from)
      : Stat(nullptr, from) {}
  Stat(Stat&& from) noexcept
    : Stat() {
    *this = ::std::move(from);
  }

  inline Stat& operator=(const Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline Stat& operator=(Stat&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Stat& default_instance() {
    return *internal_default_instance();
  }
  static inline const Stat* internal_default_instance() {
    return reinterpret_cast<const Stat*>(
               &_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Stat& a, Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(Stat* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Stat* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Stat* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Stat>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Stat& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Stat& from) {
    Stat::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Stat* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.Stat";
  }
  protected:
  explicit Stat(::google::protobuf::Arena* arena);
  Stat(::google::protobuf::Arena* arena, const Stat& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 value = 2;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xray.app.stats.command.Stat)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      40, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class QueryStatsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.stats.command.QueryStatsRequest) */ {
 public:
  inline QueryStatsRequest() : QueryStatsRequest(nullptr) {}
  ~QueryStatsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStatsRequest(::google::protobuf::internal::ConstantInitialized);

  inline QueryStatsRequest(const QueryStatsRequest& from)
      : QueryStatsRequest(nullptr, from) {}
  QueryStatsRequest(QueryStatsRequest&& from) noexcept
    : QueryStatsRequest() {
    *this = ::std::move(from);
  }

  inline QueryStatsRequest& operator=(const QueryStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStatsRequest& operator=(QueryStatsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStatsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryStatsRequest*>(
               &_QueryStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QueryStatsRequest& a, QueryStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStatsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStatsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryStatsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryStatsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryStatsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryStatsRequest& from) {
    QueryStatsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryStatsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.QueryStatsRequest";
  }
  protected:
  explicit QueryStatsRequest(::google::protobuf::Arena* arena);
  QueryStatsRequest(::google::protobuf::Arena* arena, const QueryStatsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPatternFieldNumber = 1,
    kResetFieldNumber = 2,
  };
  // string pattern = 1;
  void clear_pattern() ;
  const std::string& pattern() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pattern(Arg_&& arg, Args_... args);
  std::string* mutable_pattern();
  PROTOBUF_NODISCARD std::string* release_pattern();
  void set_allocated_pattern(std::string* value);

  private:
  const std::string& _internal_pattern() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pattern(
      const std::string& value);
  std::string* _internal_mutable_pattern();

  public:
  // bool reset = 2;
  void clear_reset() ;
  bool reset() const;
  void set_reset(bool value);

  private:
  bool _internal_reset() const;
  void _internal_set_reset(bool value);

  public:
  // @@protoc_insertion_point(class_scope:xray.app.stats.command.QueryStatsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr pattern_;
    bool reset_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class GetStatsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.stats.command.GetStatsRequest) */ {
 public:
  inline GetStatsRequest() : GetStatsRequest(nullptr) {}
  ~GetStatsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetStatsRequest(const GetStatsRequest& from)
      : GetStatsRequest(nullptr, from) {}
  GetStatsRequest(GetStatsRequest&& from) noexcept
    : GetStatsRequest() {
    *this = ::std::move(from);
  }

  inline GetStatsRequest& operator=(const GetStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatsRequest& operator=(GetStatsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatsRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatsRequest*>(
               &_GetStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetStatsRequest& a, GetStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStatsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStatsRequest& from) {
    GetStatsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.GetStatsRequest";
  }
  protected:
  explicit GetStatsRequest(::google::protobuf::Arena* arena);
  GetStatsRequest(::google::protobuf::Arena* arena, const GetStatsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kResetFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bool reset = 2;
  void clear_reset() ;
  bool reset() const;
  void set_reset(bool value);

  private:
  bool _internal_reset() const;
  void _internal_set_reset(bool value);

  public:
  // @@protoc_insertion_point(class_scope:xray.app.stats.command.GetStatsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    bool reset_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class Config final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:xray.app.stats.command.Config) */ {
 public:
  inline Config() : Config(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Config(::google::protobuf::internal::ConstantInitialized);

  inline Config(const Config& from)
      : Config(nullptr, from) {}
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  inline Config& operator=(Config&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Config& default_instance() {
    return *internal_default_instance();
  }
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }
  inline void Swap(Config* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Config* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Config* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Config>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Config& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Config& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.Config";
  }
  protected:
  explicit Config(::google::protobuf::Arena* arena);
  Config(::google::protobuf::Arena* arena, const Config& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:xray.app.stats.command.Config)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class QueryStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.stats.command.QueryStatsResponse) */ {
 public:
  inline QueryStatsResponse() : QueryStatsResponse(nullptr) {}
  ~QueryStatsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryStatsResponse(::google::protobuf::internal::ConstantInitialized);

  inline QueryStatsResponse(const QueryStatsResponse& from)
      : QueryStatsResponse(nullptr, from) {}
  QueryStatsResponse(QueryStatsResponse&& from) noexcept
    : QueryStatsResponse() {
    *this = ::std::move(from);
  }

  inline QueryStatsResponse& operator=(const QueryStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryStatsResponse& operator=(QueryStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryStatsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryStatsResponse*>(
               &_QueryStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryStatsResponse& a, QueryStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryStatsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryStatsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryStatsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryStatsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryStatsResponse& from) {
    QueryStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryStatsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.QueryStatsResponse";
  }
  protected:
  explicit QueryStatsResponse(::google::protobuf::Arena* arena);
  QueryStatsResponse(::google::protobuf::Arena* arena, const QueryStatsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatFieldNumber = 1,
  };
  // repeated .xray.app.stats.command.Stat stat = 1;
  int stat_size() const;
  private:
  int _internal_stat_size() const;

  public:
  void clear_stat() ;
  ::xray::app::stats::command::Stat* mutable_stat(int index);
  ::google::protobuf::RepeatedPtrField< ::xray::app::stats::command::Stat >*
      mutable_stat();
  private:
  const ::google::protobuf::RepeatedPtrField<::xray::app::stats::command::Stat>& _internal_stat() const;
  ::google::protobuf::RepeatedPtrField<::xray::app::stats::command::Stat>* _internal_mutable_stat();
  public:
  const ::xray::app::stats::command::Stat& stat(int index) const;
  ::xray::app::stats::command::Stat* add_stat();
  const ::google::protobuf::RepeatedPtrField< ::xray::app::stats::command::Stat >&
      stat() const;
  // @@protoc_insertion_point(class_scope:xray.app.stats.command.QueryStatsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::xray::app::stats::command::Stat > stat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};// -------------------------------------------------------------------

class GetStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xray.app.stats.command.GetStatsResponse) */ {
 public:
  inline GetStatsResponse() : GetStatsResponse(nullptr) {}
  ~GetStatsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetStatsResponse(const GetStatsResponse& from)
      : GetStatsResponse(nullptr, from) {}
  GetStatsResponse(GetStatsResponse&& from) noexcept
    : GetStatsResponse() {
    *this = ::std::move(from);
  }

  inline GetStatsResponse& operator=(const GetStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatsResponse& operator=(GetStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatsResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatsResponse*>(
               &_GetStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetStatsResponse& a, GetStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStatsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStatsResponse& from) {
    GetStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "xray.app.stats.command.GetStatsResponse";
  }
  protected:
  explicit GetStatsResponse(::google::protobuf::Arena* arena);
  GetStatsResponse(::google::protobuf::Arena* arena, const GetStatsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatFieldNumber = 1,
  };
  // .xray.app.stats.command.Stat stat = 1;
  bool has_stat() const;
  void clear_stat() ;
  const ::xray::app::stats::command::Stat& stat() const;
  PROTOBUF_NODISCARD ::xray::app::stats::command::Stat* release_stat();
  ::xray::app::stats::command::Stat* mutable_stat();
  void set_allocated_stat(::xray::app::stats::command::Stat* value);
  void unsafe_arena_set_allocated_stat(::xray::app::stats::command::Stat* value);
  ::xray::app::stats::command::Stat* unsafe_arena_release_stat();

  private:
  const ::xray::app::stats::command::Stat& _internal_stat() const;
  ::xray::app::stats::command::Stat* _internal_mutable_stat();

  public:
  // @@protoc_insertion_point(class_scope:xray.app.stats.command.GetStatsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::xray::app::stats::command::Stat* stat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_app_2fstats_2fcommand_2fcommand_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetStatsRequest

// string name = 1;
inline void GetStatsRequest::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetStatsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.GetStatsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStatsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.stats.command.GetStatsRequest.name)
}
inline std::string* GetStatsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:xray.app.stats.command.GetStatsRequest.name)
  return _s;
}
inline const std::string& GetStatsRequest::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GetStatsRequest::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetStatsRequest::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetStatsRequest::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.stats.command.GetStatsRequest.name)
  return _impl_.name_.Release();
}
inline void GetStatsRequest::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.stats.command.GetStatsRequest.name)
}

// bool reset = 2;
inline void GetStatsRequest::clear_reset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reset_ = false;
}
inline bool GetStatsRequest::reset() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.GetStatsRequest.reset)
  return _internal_reset();
}
inline void GetStatsRequest::set_reset(bool value) {
  _internal_set_reset(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.GetStatsRequest.reset)
}
inline bool GetStatsRequest::_internal_reset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reset_;
}
inline void GetStatsRequest::_internal_set_reset(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reset_ = value;
}

// -------------------------------------------------------------------

// Stat

// string name = 1;
inline void Stat::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Stat::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.Stat.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Stat::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.stats.command.Stat.name)
}
inline std::string* Stat::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:xray.app.stats.command.Stat.name)
  return _s;
}
inline const std::string& Stat::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Stat::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Stat::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Stat::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.stats.command.Stat.name)
  return _impl_.name_.Release();
}
inline void Stat::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.stats.command.Stat.name)
}

// int64 value = 2;
inline void Stat::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t Stat::value() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.Stat.value)
  return _internal_value();
}
inline void Stat::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.Stat.value)
}
inline ::int64_t Stat::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void Stat::_internal_set_value(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// GetStatsResponse

// .xray.app.stats.command.Stat stat = 1;
inline bool GetStatsResponse::has_stat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stat_ != nullptr);
  return value;
}
inline void GetStatsResponse::clear_stat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.stat_ != nullptr) _impl_.stat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::xray::app::stats::command::Stat& GetStatsResponse::_internal_stat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::xray::app::stats::command::Stat* p = _impl_.stat_;
  return p != nullptr ? *p : reinterpret_cast<const ::xray::app::stats::command::Stat&>(::xray::app::stats::command::_Stat_default_instance_);
}
inline const ::xray::app::stats::command::Stat& GetStatsResponse::stat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.GetStatsResponse.stat)
  return _internal_stat();
}
inline void GetStatsResponse::unsafe_arena_set_allocated_stat(::xray::app::stats::command::Stat* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stat_);
  }
  _impl_.stat_ = reinterpret_cast<::xray::app::stats::command::Stat*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xray.app.stats.command.GetStatsResponse.stat)
}
inline ::xray::app::stats::command::Stat* GetStatsResponse::release_stat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::app::stats::command::Stat* released = _impl_.stat_;
  _impl_.stat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::xray::app::stats::command::Stat* GetStatsResponse::unsafe_arena_release_stat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.stats.command.GetStatsResponse.stat)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xray::app::stats::command::Stat* temp = _impl_.stat_;
  _impl_.stat_ = nullptr;
  return temp;
}
inline ::xray::app::stats::command::Stat* GetStatsResponse::_internal_mutable_stat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stat_ == nullptr) {
    auto* p = CreateMaybeMessage<::xray::app::stats::command::Stat>(GetArena());
    _impl_.stat_ = reinterpret_cast<::xray::app::stats::command::Stat*>(p);
  }
  return _impl_.stat_;
}
inline ::xray::app::stats::command::Stat* GetStatsResponse::mutable_stat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::xray::app::stats::command::Stat* _msg = _internal_mutable_stat();
  // @@protoc_insertion_point(field_mutable:xray.app.stats.command.GetStatsResponse.stat)
  return _msg;
}
inline void GetStatsResponse::set_allocated_stat(::xray::app::stats::command::Stat* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::xray::app::stats::command::Stat*>(_impl_.stat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::xray::app::stats::command::Stat*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.stat_ = reinterpret_cast<::xray::app::stats::command::Stat*>(value);
  // @@protoc_insertion_point(field_set_allocated:xray.app.stats.command.GetStatsResponse.stat)
}

// -------------------------------------------------------------------

// QueryStatsRequest

// string pattern = 1;
inline void QueryStatsRequest::clear_pattern() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pattern_.ClearToEmpty();
}
inline const std::string& QueryStatsRequest::pattern() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.QueryStatsRequest.pattern)
  return _internal_pattern();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryStatsRequest::set_pattern(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pattern_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xray.app.stats.command.QueryStatsRequest.pattern)
}
inline std::string* QueryStatsRequest::mutable_pattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pattern();
  // @@protoc_insertion_point(field_mutable:xray.app.stats.command.QueryStatsRequest.pattern)
  return _s;
}
inline const std::string& QueryStatsRequest::_internal_pattern() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pattern_.Get();
}
inline void QueryStatsRequest::_internal_set_pattern(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pattern_.Set(value, GetArena());
}
inline std::string* QueryStatsRequest::_internal_mutable_pattern() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pattern_.Mutable( GetArena());
}
inline std::string* QueryStatsRequest::release_pattern() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:xray.app.stats.command.QueryStatsRequest.pattern)
  return _impl_.pattern_.Release();
}
inline void QueryStatsRequest::set_allocated_pattern(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pattern_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pattern_.IsDefault()) {
          _impl_.pattern_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:xray.app.stats.command.QueryStatsRequest.pattern)
}

// bool reset = 2;
inline void QueryStatsRequest::clear_reset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reset_ = false;
}
inline bool QueryStatsRequest::reset() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.QueryStatsRequest.reset)
  return _internal_reset();
}
inline void QueryStatsRequest::set_reset(bool value) {
  _internal_set_reset(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.QueryStatsRequest.reset)
}
inline bool QueryStatsRequest::_internal_reset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reset_;
}
inline void QueryStatsRequest::_internal_set_reset(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reset_ = value;
}

// -------------------------------------------------------------------

// QueryStatsResponse

// repeated .xray.app.stats.command.Stat stat = 1;
inline int QueryStatsResponse::_internal_stat_size() const {
  return _internal_stat().size();
}
inline int QueryStatsResponse::stat_size() const {
  return _internal_stat_size();
}
inline void QueryStatsResponse::clear_stat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stat_.Clear();
}
inline ::xray::app::stats::command::Stat* QueryStatsResponse::mutable_stat(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xray.app.stats.command.QueryStatsResponse.stat)
  return _internal_mutable_stat()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xray::app::stats::command::Stat>* QueryStatsResponse::mutable_stat()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xray.app.stats.command.QueryStatsResponse.stat)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stat();
}
inline const ::xray::app::stats::command::Stat& QueryStatsResponse::stat(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.QueryStatsResponse.stat)
  return _internal_stat().Get(index);
}
inline ::xray::app::stats::command::Stat* QueryStatsResponse::add_stat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::xray::app::stats::command::Stat* _add = _internal_mutable_stat()->Add();
  // @@protoc_insertion_point(field_add:xray.app.stats.command.QueryStatsResponse.stat)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xray::app::stats::command::Stat>& QueryStatsResponse::stat() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xray.app.stats.command.QueryStatsResponse.stat)
  return _internal_stat();
}
inline const ::google::protobuf::RepeatedPtrField<::xray::app::stats::command::Stat>&
QueryStatsResponse::_internal_stat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stat_;
}
inline ::google::protobuf::RepeatedPtrField<::xray::app::stats::command::Stat>*
QueryStatsResponse::_internal_mutable_stat() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stat_;
}

// -------------------------------------------------------------------

// SysStatsRequest

// -------------------------------------------------------------------

// SysStatsResponse

// uint32 NumGoroutine = 1;
inline void SysStatsResponse::clear_numgoroutine() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.numgoroutine_ = 0u;
}
inline ::uint32_t SysStatsResponse::numgoroutine() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.NumGoroutine)
  return _internal_numgoroutine();
}
inline void SysStatsResponse::set_numgoroutine(::uint32_t value) {
  _internal_set_numgoroutine(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.NumGoroutine)
}
inline ::uint32_t SysStatsResponse::_internal_numgoroutine() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.numgoroutine_;
}
inline void SysStatsResponse::_internal_set_numgoroutine(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.numgoroutine_ = value;
}

// uint32 NumGC = 2;
inline void SysStatsResponse::clear_numgc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.numgc_ = 0u;
}
inline ::uint32_t SysStatsResponse::numgc() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.NumGC)
  return _internal_numgc();
}
inline void SysStatsResponse::set_numgc(::uint32_t value) {
  _internal_set_numgc(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.NumGC)
}
inline ::uint32_t SysStatsResponse::_internal_numgc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.numgc_;
}
inline void SysStatsResponse::_internal_set_numgc(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.numgc_ = value;
}

// uint64 Alloc = 3;
inline void SysStatsResponse::clear_alloc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.alloc_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::alloc() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.Alloc)
  return _internal_alloc();
}
inline void SysStatsResponse::set_alloc(::uint64_t value) {
  _internal_set_alloc(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.Alloc)
}
inline ::uint64_t SysStatsResponse::_internal_alloc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.alloc_;
}
inline void SysStatsResponse::_internal_set_alloc(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.alloc_ = value;
}

// uint64 TotalAlloc = 4;
inline void SysStatsResponse::clear_totalalloc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.totalalloc_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::totalalloc() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.TotalAlloc)
  return _internal_totalalloc();
}
inline void SysStatsResponse::set_totalalloc(::uint64_t value) {
  _internal_set_totalalloc(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.TotalAlloc)
}
inline ::uint64_t SysStatsResponse::_internal_totalalloc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.totalalloc_;
}
inline void SysStatsResponse::_internal_set_totalalloc(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.totalalloc_ = value;
}

// uint64 Sys = 5;
inline void SysStatsResponse::clear_sys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sys_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::sys() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.Sys)
  return _internal_sys();
}
inline void SysStatsResponse::set_sys(::uint64_t value) {
  _internal_set_sys(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.Sys)
}
inline ::uint64_t SysStatsResponse::_internal_sys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sys_;
}
inline void SysStatsResponse::_internal_set_sys(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sys_ = value;
}

// uint64 Mallocs = 6;
inline void SysStatsResponse::clear_mallocs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mallocs_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::mallocs() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.Mallocs)
  return _internal_mallocs();
}
inline void SysStatsResponse::set_mallocs(::uint64_t value) {
  _internal_set_mallocs(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.Mallocs)
}
inline ::uint64_t SysStatsResponse::_internal_mallocs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mallocs_;
}
inline void SysStatsResponse::_internal_set_mallocs(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mallocs_ = value;
}

// uint64 Frees = 7;
inline void SysStatsResponse::clear_frees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frees_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::frees() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.Frees)
  return _internal_frees();
}
inline void SysStatsResponse::set_frees(::uint64_t value) {
  _internal_set_frees(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.Frees)
}
inline ::uint64_t SysStatsResponse::_internal_frees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frees_;
}
inline void SysStatsResponse::_internal_set_frees(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frees_ = value;
}

// uint64 LiveObjects = 8;
inline void SysStatsResponse::clear_liveobjects() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.liveobjects_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::liveobjects() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.LiveObjects)
  return _internal_liveobjects();
}
inline void SysStatsResponse::set_liveobjects(::uint64_t value) {
  _internal_set_liveobjects(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.LiveObjects)
}
inline ::uint64_t SysStatsResponse::_internal_liveobjects() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.liveobjects_;
}
inline void SysStatsResponse::_internal_set_liveobjects(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.liveobjects_ = value;
}

// uint64 PauseTotalNs = 9;
inline void SysStatsResponse::clear_pausetotalns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pausetotalns_ = ::uint64_t{0u};
}
inline ::uint64_t SysStatsResponse::pausetotalns() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.PauseTotalNs)
  return _internal_pausetotalns();
}
inline void SysStatsResponse::set_pausetotalns(::uint64_t value) {
  _internal_set_pausetotalns(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.PauseTotalNs)
}
inline ::uint64_t SysStatsResponse::_internal_pausetotalns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pausetotalns_;
}
inline void SysStatsResponse::_internal_set_pausetotalns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pausetotalns_ = value;
}

// uint32 Uptime = 10;
inline void SysStatsResponse::clear_uptime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uptime_ = 0u;
}
inline ::uint32_t SysStatsResponse::uptime() const {
  // @@protoc_insertion_point(field_get:xray.app.stats.command.SysStatsResponse.Uptime)
  return _internal_uptime();
}
inline void SysStatsResponse::set_uptime(::uint32_t value) {
  _internal_set_uptime(value);
  // @@protoc_insertion_point(field_set:xray.app.stats.command.SysStatsResponse.Uptime)
}
inline ::uint32_t SysStatsResponse::_internal_uptime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uptime_;
}
inline void SysStatsResponse::_internal_set_uptime(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uptime_ = value;
}

// -------------------------------------------------------------------

// Config

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace command
}  // namespace stats
}  // namespace app
}  // namespace xray


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_app_2fstats_2fcommand_2fcommand_2eproto_2epb_2eh
