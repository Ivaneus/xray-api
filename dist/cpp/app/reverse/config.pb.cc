// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/reverse/config.proto

#include "app/reverse/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xray {
namespace app {
namespace reverse {

inline constexpr PortalConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PortalConfig::PortalConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortalConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortalConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortalConfigDefaultTypeInternal() {}
  union {
    PortalConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortalConfigDefaultTypeInternal _PortalConfig_default_instance_;

inline constexpr Control::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : random_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_{static_cast< ::xray::app::reverse::Control_State >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Control::Control(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlDefaultTypeInternal() {}
  union {
    Control _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlDefaultTypeInternal _Control_default_instance_;

inline constexpr BridgeConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        domain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BridgeConfig::BridgeConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BridgeConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BridgeConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BridgeConfigDefaultTypeInternal() {}
  union {
    BridgeConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BridgeConfigDefaultTypeInternal _BridgeConfig_default_instance_;

inline constexpr Config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bridge_config_{},
        portal_config_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Config::Config(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigDefaultTypeInternal() {}
  union {
    Config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigDefaultTypeInternal _Config_default_instance_;
}  // namespace reverse
}  // namespace app
}  // namespace xray
static ::_pb::Metadata file_level_metadata_app_2freverse_2fconfig_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2freverse_2fconfig_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_app_2freverse_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_app_2freverse_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::Control, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::Control, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::Control, _impl_.random_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::BridgeConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::BridgeConfig, _impl_.tag_),
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::BridgeConfig, _impl_.domain_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::PortalConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::PortalConfig, _impl_.tag_),
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::PortalConfig, _impl_.domain_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::Config, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::Config, _impl_.bridge_config_),
    PROTOBUF_FIELD_OFFSET(::xray::app::reverse::Config, _impl_.portal_config_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xray::app::reverse::Control)},
        {10, -1, -1, sizeof(::xray::app::reverse::BridgeConfig)},
        {20, -1, -1, sizeof(::xray::app::reverse::PortalConfig)},
        {30, -1, -1, sizeof(::xray::app::reverse::Config)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::xray::app::reverse::_Control_default_instance_._instance,
    &::xray::app::reverse::_BridgeConfig_default_instance_._instance,
    &::xray::app::reverse::_PortalConfig_default_instance_._instance,
    &::xray::app::reverse::_Config_default_instance_._instance,
};
const char descriptor_table_protodef_app_2freverse_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\030app/reverse/config.proto\022\020xray.app.rev"
    "erse\"i\n\007Control\022.\n\005state\030\001 \001(\0162\037.xray.ap"
    "p.reverse.Control.State\022\016\n\006random\030c \001(\014\""
    "\036\n\005State\022\n\n\006ACTIVE\020\000\022\t\n\005DRAIN\020\001\"+\n\014Bridg"
    "eConfig\022\013\n\003tag\030\001 \001(\t\022\016\n\006domain\030\002 \001(\t\"+\n\014"
    "PortalConfig\022\013\n\003tag\030\001 \001(\t\022\016\n\006domain\030\002 \001("
    "\t\"v\n\006Config\0225\n\rbridge_config\030\001 \003(\0132\036.xra"
    "y.app.reverse.BridgeConfig\0225\n\rportal_con"
    "fig\030\002 \003(\0132\036.xray.app.reverse.PortalConfi"
    "gBV\n\026com.xray.proxy.reverseP\001Z%github.co"
    "m/xtls/xray-core/app/reverse\252\002\022Xray.Prox"
    "y.Reverseb\006proto3"
};
static ::absl::once_flag descriptor_table_app_2freverse_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2freverse_2fconfig_2eproto = {
    false,
    false,
    457,
    descriptor_table_protodef_app_2freverse_2fconfig_2eproto,
    "app/reverse/config.proto",
    &descriptor_table_app_2freverse_2fconfig_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_app_2freverse_2fconfig_2eproto::offsets,
    file_level_metadata_app_2freverse_2fconfig_2eproto,
    file_level_enum_descriptors_app_2freverse_2fconfig_2eproto,
    file_level_service_descriptors_app_2freverse_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2freverse_2fconfig_2eproto_getter() {
  return &descriptor_table_app_2freverse_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2freverse_2fconfig_2eproto(&descriptor_table_app_2freverse_2fconfig_2eproto);
namespace xray {
namespace app {
namespace reverse {
const ::google::protobuf::EnumDescriptor* Control_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_app_2freverse_2fconfig_2eproto);
  return file_level_enum_descriptors_app_2freverse_2fconfig_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Control_State_internal_data_[] = {
    131072u, 0u, };
bool Control_State_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Control_State Control::ACTIVE;
constexpr Control_State Control::DRAIN;
constexpr Control_State Control::State_MIN;
constexpr Control_State Control::State_MAX;
constexpr int Control::State_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Control::_Internal {
 public:
};

Control::Control(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.app.reverse.Control)
}
inline PROTOBUF_NDEBUG_INLINE Control::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : random_(arena, from.random_),
        _cached_size_{0} {}

Control::Control(
    ::google::protobuf::Arena* arena,
    const Control& from)
    : ::google::protobuf::Message(arena) {
  Control* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.state_ = from._impl_.state_;

  // @@protoc_insertion_point(copy_constructor:xray.app.reverse.Control)
}
inline PROTOBUF_NDEBUG_INLINE Control::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : random_(arena),
        _cached_size_{0} {}

inline void Control::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.state_ = {};
}
Control::~Control() {
  // @@protoc_insertion_point(destructor:xray.app.reverse.Control)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Control::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.random_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Control::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.app.reverse.Control)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.random_.ClearToEmpty();
  _impl_.state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Control::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 7> Control::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    99, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Control_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .xray.app.reverse.Control.State state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Control, _impl_.state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.state_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bytes random = 99;
    {::_pbi::TcParser::FastBS2,
     {1690, 63, 0, PROTOBUF_FIELD_OFFSET(Control, _impl_.random_)}},
  }}, {{
    99, 0, 1,
    65534, 1,
    65535, 65535
  }}, {{
    // .xray.app.reverse.Control.State state = 1;
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes random = 99;
    {PROTOBUF_FIELD_OFFSET(Control, _impl_.random_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Control::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.app.reverse.Control)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .xray.app.reverse.Control.State state = 1;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_state(), target);
  }

  // bytes random = 99;
  if (!this->_internal_random().empty()) {
    const std::string& _s = this->_internal_random();
    target = stream->WriteBytesMaybeAliased(99, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.app.reverse.Control)
  return target;
}

::size_t Control::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.app.reverse.Control)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes random = 99;
  if (!this->_internal_random().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_random());
  }

  // .xray.app.reverse.Control.State state = 1;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Control::_class_data_ = {
    Control::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Control::GetClassData() const {
  return &_class_data_;
}

void Control::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Control*>(&to_msg);
  auto& from = static_cast<const Control&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.app.reverse.Control)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_random().empty()) {
    _this->_internal_set_random(from._internal_random());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Control::CopyFrom(const Control& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.app.reverse.Control)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Control::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Control::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Control::InternalSwap(Control* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.random_, &other->_impl_.random_, arena);
  swap(_impl_.state_, other->_impl_.state_);
}

::google::protobuf::Metadata Control::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2freverse_2fconfig_2eproto_getter, &descriptor_table_app_2freverse_2fconfig_2eproto_once,
      file_level_metadata_app_2freverse_2fconfig_2eproto[0]);
}
// ===================================================================

class BridgeConfig::_Internal {
 public:
};

BridgeConfig::BridgeConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.app.reverse.BridgeConfig)
}
inline PROTOBUF_NDEBUG_INLINE BridgeConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tag_(arena, from.tag_),
        domain_(arena, from.domain_),
        _cached_size_{0} {}

BridgeConfig::BridgeConfig(
    ::google::protobuf::Arena* arena,
    const BridgeConfig& from)
    : ::google::protobuf::Message(arena) {
  BridgeConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.app.reverse.BridgeConfig)
}
inline PROTOBUF_NDEBUG_INLINE BridgeConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tag_(arena),
        domain_(arena),
        _cached_size_{0} {}

inline void BridgeConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BridgeConfig::~BridgeConfig() {
  // @@protoc_insertion_point(destructor:xray.app.reverse.BridgeConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BridgeConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tag_.Destroy();
  _impl_.domain_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BridgeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.app.reverse.BridgeConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.ClearToEmpty();
  _impl_.domain_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BridgeConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> BridgeConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BridgeConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string domain = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BridgeConfig, _impl_.domain_)}},
    // string tag = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BridgeConfig, _impl_.tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag = 1;
    {PROTOBUF_FIELD_OFFSET(BridgeConfig, _impl_.tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string domain = 2;
    {PROTOBUF_FIELD_OFFSET(BridgeConfig, _impl_.domain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\3\6\0\0\0\0\0"
    "xray.app.reverse.BridgeConfig"
    "tag"
    "domain"
  }},
};

::uint8_t* BridgeConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.app.reverse.BridgeConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    const std::string& _s = this->_internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.app.reverse.BridgeConfig.tag");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string domain = 2;
  if (!this->_internal_domain().empty()) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.app.reverse.BridgeConfig.domain");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.app.reverse.BridgeConfig)
  return target;
}

::size_t BridgeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.app.reverse.BridgeConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tag());
  }

  // string domain = 2;
  if (!this->_internal_domain().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_domain());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BridgeConfig::_class_data_ = {
    BridgeConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BridgeConfig::GetClassData() const {
  return &_class_data_;
}

void BridgeConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BridgeConfig*>(&to_msg);
  auto& from = static_cast<const BridgeConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.app.reverse.BridgeConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  if (!from._internal_domain().empty()) {
    _this->_internal_set_domain(from._internal_domain());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BridgeConfig::CopyFrom(const BridgeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.app.reverse.BridgeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BridgeConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BridgeConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BridgeConfig::InternalSwap(BridgeConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
}

::google::protobuf::Metadata BridgeConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2freverse_2fconfig_2eproto_getter, &descriptor_table_app_2freverse_2fconfig_2eproto_once,
      file_level_metadata_app_2freverse_2fconfig_2eproto[1]);
}
// ===================================================================

class PortalConfig::_Internal {
 public:
};

PortalConfig::PortalConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.app.reverse.PortalConfig)
}
inline PROTOBUF_NDEBUG_INLINE PortalConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tag_(arena, from.tag_),
        domain_(arena, from.domain_),
        _cached_size_{0} {}

PortalConfig::PortalConfig(
    ::google::protobuf::Arena* arena,
    const PortalConfig& from)
    : ::google::protobuf::Message(arena) {
  PortalConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.app.reverse.PortalConfig)
}
inline PROTOBUF_NDEBUG_INLINE PortalConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tag_(arena),
        domain_(arena),
        _cached_size_{0} {}

inline void PortalConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PortalConfig::~PortalConfig() {
  // @@protoc_insertion_point(destructor:xray.app.reverse.PortalConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortalConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tag_.Destroy();
  _impl_.domain_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PortalConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.app.reverse.PortalConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tag_.ClearToEmpty();
  _impl_.domain_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortalConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> PortalConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PortalConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string domain = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PortalConfig, _impl_.domain_)}},
    // string tag = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortalConfig, _impl_.tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag = 1;
    {PROTOBUF_FIELD_OFFSET(PortalConfig, _impl_.tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string domain = 2;
    {PROTOBUF_FIELD_OFFSET(PortalConfig, _impl_.domain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\3\6\0\0\0\0\0"
    "xray.app.reverse.PortalConfig"
    "tag"
    "domain"
  }},
};

::uint8_t* PortalConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.app.reverse.PortalConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    const std::string& _s = this->_internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.app.reverse.PortalConfig.tag");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string domain = 2;
  if (!this->_internal_domain().empty()) {
    const std::string& _s = this->_internal_domain();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.app.reverse.PortalConfig.domain");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.app.reverse.PortalConfig)
  return target;
}

::size_t PortalConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.app.reverse.PortalConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tag());
  }

  // string domain = 2;
  if (!this->_internal_domain().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_domain());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortalConfig::_class_data_ = {
    PortalConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortalConfig::GetClassData() const {
  return &_class_data_;
}

void PortalConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortalConfig*>(&to_msg);
  auto& from = static_cast<const PortalConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.app.reverse.PortalConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  if (!from._internal_domain().empty()) {
    _this->_internal_set_domain(from._internal_domain());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortalConfig::CopyFrom(const PortalConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.app.reverse.PortalConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortalConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortalConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortalConfig::InternalSwap(PortalConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domain_, &other->_impl_.domain_, arena);
}

::google::protobuf::Metadata PortalConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2freverse_2fconfig_2eproto_getter, &descriptor_table_app_2freverse_2fconfig_2eproto_once,
      file_level_metadata_app_2freverse_2fconfig_2eproto[2]);
}
// ===================================================================

class Config::_Internal {
 public:
};

Config::Config(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.app.reverse.Config)
}
inline PROTOBUF_NDEBUG_INLINE Config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bridge_config_{visibility, arena, from.bridge_config_},
        portal_config_{visibility, arena, from.portal_config_},
        _cached_size_{0} {}

Config::Config(
    ::google::protobuf::Arena* arena,
    const Config& from)
    : ::google::protobuf::Message(arena) {
  Config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.app.reverse.Config)
}
inline PROTOBUF_NDEBUG_INLINE Config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bridge_config_{visibility, arena},
        portal_config_{visibility, arena},
        _cached_size_{0} {}

inline void Config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Config::~Config() {
  // @@protoc_insertion_point(destructor:xray.app.reverse.Config)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Config::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.app.reverse.Config)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bridge_config_.Clear();
  _impl_.portal_config_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Config::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Config::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Config_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .xray.app.reverse.PortalConfig portal_config = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Config, _impl_.portal_config_)}},
    // repeated .xray.app.reverse.BridgeConfig bridge_config = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Config, _impl_.bridge_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xray.app.reverse.BridgeConfig bridge_config = 1;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.bridge_config_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xray.app.reverse.PortalConfig portal_config = 2;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.portal_config_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xray::app::reverse::BridgeConfig>()},
    {::_pbi::TcParser::GetTable<::xray::app::reverse::PortalConfig>()},
  }}, {{
  }},
};

::uint8_t* Config::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.app.reverse.Config)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .xray.app.reverse.BridgeConfig bridge_config = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bridge_config_size()); i < n; i++) {
    const auto& repfield = this->_internal_bridge_config().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .xray.app.reverse.PortalConfig portal_config = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_portal_config_size()); i < n; i++) {
    const auto& repfield = this->_internal_portal_config().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.app.reverse.Config)
  return target;
}

::size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.app.reverse.Config)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xray.app.reverse.BridgeConfig bridge_config = 1;
  total_size += 1UL * this->_internal_bridge_config_size();
  for (const auto& msg : this->_internal_bridge_config()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .xray.app.reverse.PortalConfig portal_config = 2;
  total_size += 1UL * this->_internal_portal_config_size();
  for (const auto& msg : this->_internal_portal_config()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Config::_class_data_ = {
    Config::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Config::GetClassData() const {
  return &_class_data_;
}

void Config::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Config*>(&to_msg);
  auto& from = static_cast<const Config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.app.reverse.Config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bridge_config()->MergeFrom(
      from._internal_bridge_config());
  _this->_internal_mutable_portal_config()->MergeFrom(
      from._internal_portal_config());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.app.reverse.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Config::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Config::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Config::InternalSwap(Config* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bridge_config_.InternalSwap(&other->_impl_.bridge_config_);
  _impl_.portal_config_.InternalSwap(&other->_impl_.portal_config_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2freverse_2fconfig_2eproto_getter, &descriptor_table_app_2freverse_2fconfig_2eproto_once,
      file_level_metadata_app_2freverse_2fconfig_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace reverse
}  // namespace app
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
