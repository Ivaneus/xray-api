// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/log/command/config.proto

#include "app/log/command/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xray {
namespace app {
namespace log {
namespace command {
      template <typename>
PROTOBUF_CONSTEXPR RestartLoggerResponse::RestartLoggerResponse(::_pbi::ConstantInitialized) {}
struct RestartLoggerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RestartLoggerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RestartLoggerResponseDefaultTypeInternal() {}
  union {
    RestartLoggerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RestartLoggerResponseDefaultTypeInternal _RestartLoggerResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RestartLoggerRequest::RestartLoggerRequest(::_pbi::ConstantInitialized) {}
struct RestartLoggerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RestartLoggerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RestartLoggerRequestDefaultTypeInternal() {}
  union {
    RestartLoggerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RestartLoggerRequestDefaultTypeInternal _RestartLoggerRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Config::Config(::_pbi::ConstantInitialized) {}
struct ConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigDefaultTypeInternal() {}
  union {
    Config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigDefaultTypeInternal _Config_default_instance_;
}  // namespace command
}  // namespace log
}  // namespace app
}  // namespace xray
static ::_pb::Metadata file_level_metadata_app_2flog_2fcommand_2fconfig_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_app_2flog_2fcommand_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_app_2flog_2fcommand_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_app_2flog_2fcommand_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::log::command::Config, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::log::command::RestartLoggerRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::log::command::RestartLoggerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xray::app::log::command::Config)},
        {8, -1, -1, sizeof(::xray::app::log::command::RestartLoggerRequest)},
        {16, -1, -1, sizeof(::xray::app::log::command::RestartLoggerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::xray::app::log::command::_Config_default_instance_._instance,
    &::xray::app::log::command::_RestartLoggerRequest_default_instance_._instance,
    &::xray::app::log::command::_RestartLoggerResponse_default_instance_._instance,
};
const char descriptor_table_protodef_app_2flog_2fcommand_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\034app/log/command/config.proto\022\024xray.app"
    ".log.command\"\010\n\006Config\"\026\n\024RestartLoggerR"
    "equest\"\027\n\025RestartLoggerResponse2{\n\rLogge"
    "rService\022j\n\rRestartLogger\022*.xray.app.log"
    ".command.RestartLoggerRequest\032+.xray.app"
    ".log.command.RestartLoggerResponse\"\000B^\n\030"
    "com.xray.app.log.commandP\001Z)github.com/x"
    "tls/xray-core/app/log/command\252\002\024Xray.App"
    ".Log.Commandb\006proto3"
};
static ::absl::once_flag descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2flog_2fcommand_2fconfig_2eproto = {
    false,
    false,
    340,
    descriptor_table_protodef_app_2flog_2fcommand_2fconfig_2eproto,
    "app/log/command/config.proto",
    &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_app_2flog_2fcommand_2fconfig_2eproto::offsets,
    file_level_metadata_app_2flog_2fcommand_2fconfig_2eproto,
    file_level_enum_descriptors_app_2flog_2fcommand_2fconfig_2eproto,
    file_level_service_descriptors_app_2flog_2fcommand_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_getter() {
  return &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2flog_2fcommand_2fconfig_2eproto(&descriptor_table_app_2flog_2fcommand_2fconfig_2eproto);
namespace xray {
namespace app {
namespace log {
namespace command {
// ===================================================================

class Config::_Internal {
 public:
};

Config::Config(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:xray.app.log.command.Config)
}
Config::Config(
    ::google::protobuf::Arena* arena,
    const Config& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:xray.app.log.command.Config)
}









::google::protobuf::Metadata Config::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_getter, &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_once,
      file_level_metadata_app_2flog_2fcommand_2fconfig_2eproto[0]);
}
// ===================================================================

class RestartLoggerRequest::_Internal {
 public:
};

RestartLoggerRequest::RestartLoggerRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:xray.app.log.command.RestartLoggerRequest)
}
RestartLoggerRequest::RestartLoggerRequest(
    ::google::protobuf::Arena* arena,
    const RestartLoggerRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  RestartLoggerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:xray.app.log.command.RestartLoggerRequest)
}









::google::protobuf::Metadata RestartLoggerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_getter, &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_once,
      file_level_metadata_app_2flog_2fcommand_2fconfig_2eproto[1]);
}
// ===================================================================

class RestartLoggerResponse::_Internal {
 public:
};

RestartLoggerResponse::RestartLoggerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:xray.app.log.command.RestartLoggerResponse)
}
RestartLoggerResponse::RestartLoggerResponse(
    ::google::protobuf::Arena* arena,
    const RestartLoggerResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  RestartLoggerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:xray.app.log.command.RestartLoggerResponse)
}









::google::protobuf::Metadata RestartLoggerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_getter, &descriptor_table_app_2flog_2fcommand_2fconfig_2eproto_once,
      file_level_metadata_app_2flog_2fcommand_2fconfig_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace command
}  // namespace log
}  // namespace app
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
