// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/commander/config.proto

#include "app/commander/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xray {
namespace app {
namespace commander {
      template <typename>
PROTOBUF_CONSTEXPR ReflectionConfig::ReflectionConfig(::_pbi::ConstantInitialized) {}
struct ReflectionConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReflectionConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReflectionConfigDefaultTypeInternal() {}
  union {
    ReflectionConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReflectionConfigDefaultTypeInternal _ReflectionConfig_default_instance_;

inline constexpr Config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : service_{},
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        listen_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Config::Config(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigDefaultTypeInternal() {}
  union {
    Config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigDefaultTypeInternal _Config_default_instance_;
}  // namespace commander
}  // namespace app
}  // namespace xray
static ::_pb::Metadata file_level_metadata_app_2fcommander_2fconfig_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_app_2fcommander_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_app_2fcommander_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_app_2fcommander_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::commander::Config, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::app::commander::Config, _impl_.tag_),
    PROTOBUF_FIELD_OFFSET(::xray::app::commander::Config, _impl_.listen_),
    PROTOBUF_FIELD_OFFSET(::xray::app::commander::Config, _impl_.service_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::app::commander::ReflectionConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xray::app::commander::Config)},
        {11, -1, -1, sizeof(::xray::app::commander::ReflectionConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::xray::app::commander::_Config_default_instance_._instance,
    &::xray::app::commander::_ReflectionConfig_default_instance_._instance,
};
const char descriptor_table_protodef_app_2fcommander_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\032app/commander/config.proto\022\022xray.app.c"
    "ommander\032!common/serial/typed_message.pr"
    "oto\"X\n\006Config\022\013\n\003tag\030\001 \001(\t\022\016\n\006listen\030\003 \001"
    "(\t\0221\n\007service\030\002 \003(\0132 .xray.common.serial"
    ".TypedMessage\"\022\n\020ReflectionConfigBX\n\026com"
    ".xray.app.commanderP\001Z\'github.com/xtls/x"
    "ray-core/app/commander\252\002\022Xray.App.Comman"
    "derb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fcommander_2fconfig_2eproto_deps[1] =
    {
        &::descriptor_table_common_2fserial_2ftyped_5fmessage_2eproto,
};
static ::absl::once_flag descriptor_table_app_2fcommander_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fcommander_2fconfig_2eproto = {
    false,
    false,
    291,
    descriptor_table_protodef_app_2fcommander_2fconfig_2eproto,
    "app/commander/config.proto",
    &descriptor_table_app_2fcommander_2fconfig_2eproto_once,
    descriptor_table_app_2fcommander_2fconfig_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_app_2fcommander_2fconfig_2eproto::offsets,
    file_level_metadata_app_2fcommander_2fconfig_2eproto,
    file_level_enum_descriptors_app_2fcommander_2fconfig_2eproto,
    file_level_service_descriptors_app_2fcommander_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fcommander_2fconfig_2eproto_getter() {
  return &descriptor_table_app_2fcommander_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fcommander_2fconfig_2eproto(&descriptor_table_app_2fcommander_2fconfig_2eproto);
namespace xray {
namespace app {
namespace commander {
// ===================================================================

class Config::_Internal {
 public:
};

void Config::clear_service() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.service_.Clear();
}
Config::Config(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.app.commander.Config)
}
inline PROTOBUF_NDEBUG_INLINE Config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : service_{visibility, arena, from.service_},
        tag_(arena, from.tag_),
        listen_(arena, from.listen_),
        _cached_size_{0} {}

Config::Config(
    ::google::protobuf::Arena* arena,
    const Config& from)
    : ::google::protobuf::Message(arena) {
  Config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.app.commander.Config)
}
inline PROTOBUF_NDEBUG_INLINE Config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : service_{visibility, arena},
        tag_(arena),
        listen_(arena),
        _cached_size_{0} {}

inline void Config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Config::~Config() {
  // @@protoc_insertion_point(destructor:xray.app.commander.Config)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Config::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tag_.Destroy();
  _impl_.listen_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.app.commander.Config)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_.Clear();
  _impl_.tag_.ClearToEmpty();
  _impl_.listen_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Config::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 43, 2> Config::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Config_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string tag = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Config, _impl_.tag_)}},
    // repeated .xray.common.serial.TypedMessage service = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Config, _impl_.service_)}},
    // string listen = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Config, _impl_.listen_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tag = 1;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .xray.common.serial.TypedMessage service = 2;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.service_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string listen = 3;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.listen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xray::common::serial::TypedMessage>()},
  }}, {{
    "\31\3\0\6\0\0\0\0"
    "xray.app.commander.Config"
    "tag"
    "listen"
  }},
};

::uint8_t* Config::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.app.commander.Config)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    const std::string& _s = this->_internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.app.commander.Config.tag");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .xray.common.serial.TypedMessage service = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_service_size()); i < n; i++) {
    const auto& repfield = this->_internal_service().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string listen = 3;
  if (!this->_internal_listen().empty()) {
    const std::string& _s = this->_internal_listen();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.app.commander.Config.listen");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.app.commander.Config)
  return target;
}

::size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.app.commander.Config)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xray.common.serial.TypedMessage service = 2;
  total_size += 1UL * this->_internal_service_size();
  for (const auto& msg : this->_internal_service()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string tag = 1;
  if (!this->_internal_tag().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tag());
  }

  // string listen = 3;
  if (!this->_internal_listen().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_listen());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Config::_class_data_ = {
    Config::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Config::GetClassData() const {
  return &_class_data_;
}

void Config::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Config*>(&to_msg);
  auto& from = static_cast<const Config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.app.commander.Config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_service()->MergeFrom(
      from._internal_service());
  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  if (!from._internal_listen().empty()) {
    _this->_internal_set_listen(from._internal_listen());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.app.commander.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Config::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Config::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Config::InternalSwap(Config* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.service_.InternalSwap(&other->_impl_.service_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.listen_, &other->_impl_.listen_, arena);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fcommander_2fconfig_2eproto_getter, &descriptor_table_app_2fcommander_2fconfig_2eproto_once,
      file_level_metadata_app_2fcommander_2fconfig_2eproto[0]);
}
// ===================================================================

class ReflectionConfig::_Internal {
 public:
};

ReflectionConfig::ReflectionConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:xray.app.commander.ReflectionConfig)
}
ReflectionConfig::ReflectionConfig(
    ::google::protobuf::Arena* arena,
    const ReflectionConfig& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ReflectionConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:xray.app.commander.ReflectionConfig)
}









::google::protobuf::Metadata ReflectionConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fcommander_2fconfig_2eproto_getter, &descriptor_table_app_2fcommander_2fconfig_2eproto_once,
      file_level_metadata_app_2fcommander_2fconfig_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace commander
}  // namespace app
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
