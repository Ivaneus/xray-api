// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/vmess/inbound/config.proto

#include "proxy/vmess/inbound/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xray {
namespace proxy {
namespace vmess {
namespace inbound {

inline constexpr DetourConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : to_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DetourConfig::DetourConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DetourConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DetourConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DetourConfigDefaultTypeInternal() {}
  union {
    DetourConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DetourConfigDefaultTypeInternal _DetourConfig_default_instance_;

inline constexpr DefaultConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : level_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DefaultConfig::DefaultConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DefaultConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DefaultConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DefaultConfigDefaultTypeInternal() {}
  union {
    DefaultConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DefaultConfigDefaultTypeInternal _DefaultConfig_default_instance_;

inline constexpr Config::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_{},
        default__{nullptr},
        detour_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Config::Config(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigDefaultTypeInternal() {}
  union {
    Config _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigDefaultTypeInternal _Config_default_instance_;
}  // namespace inbound
}  // namespace vmess
}  // namespace proxy
}  // namespace xray
static ::_pb::Metadata file_level_metadata_proxy_2fvmess_2finbound_2fconfig_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proxy_2fvmess_2finbound_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proxy_2fvmess_2finbound_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_proxy_2fvmess_2finbound_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::DetourConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::DetourConfig, _impl_.to_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::DefaultConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::DefaultConfig, _impl_.level_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::Config, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::Config, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::Config, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::Config, _impl_.default__),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::vmess::inbound::Config, _impl_.detour_),
    ~0u,
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xray::proxy::vmess::inbound::DetourConfig)},
        {9, -1, -1, sizeof(::xray::proxy::vmess::inbound::DefaultConfig)},
        {18, 29, -1, sizeof(::xray::proxy::vmess::inbound::Config)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::xray::proxy::vmess::inbound::_DetourConfig_default_instance_._instance,
    &::xray::proxy::vmess::inbound::_DefaultConfig_default_instance_._instance,
    &::xray::proxy::vmess::inbound::_Config_default_instance_._instance,
};
const char descriptor_table_protodef_proxy_2fvmess_2finbound_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n proxy/vmess/inbound/config.proto\022\030xray"
    ".proxy.vmess.inbound\032\032common/protocol/us"
    "er.proto\"\032\n\014DetourConfig\022\n\n\002to\030\001 \001(\t\"\036\n\r"
    "DefaultConfig\022\r\n\005level\030\002 \001(\r\"\244\001\n\006Config\022"
    "(\n\004user\030\001 \003(\0132\032.xray.common.protocol.Use"
    "r\0228\n\007default\030\002 \001(\0132\'.xray.proxy.vmess.in"
    "bound.DefaultConfig\0226\n\006detour\030\003 \001(\0132&.xr"
    "ay.proxy.vmess.inbound.DetourConfigBj\n\034c"
    "om.xray.proxy.vmess.inboundP\001Z-github.co"
    "m/xtls/xray-core/proxy/vmess/inbound\252\002\030X"
    "ray.Proxy.Vmess.Inboundb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_deps[1] =
    {
        &::descriptor_table_common_2fprotocol_2fuser_2eproto,
};
static ::absl::once_flag descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto = {
    false,
    false,
    431,
    descriptor_table_protodef_proxy_2fvmess_2finbound_2fconfig_2eproto,
    "proxy/vmess/inbound/config.proto",
    &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_once,
    descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_proxy_2fvmess_2finbound_2fconfig_2eproto::offsets,
    file_level_metadata_proxy_2fvmess_2finbound_2fconfig_2eproto,
    file_level_enum_descriptors_proxy_2fvmess_2finbound_2fconfig_2eproto,
    file_level_service_descriptors_proxy_2fvmess_2finbound_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_getter() {
  return &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proxy_2fvmess_2finbound_2fconfig_2eproto(&descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto);
namespace xray {
namespace proxy {
namespace vmess {
namespace inbound {
// ===================================================================

class DetourConfig::_Internal {
 public:
};

DetourConfig::DetourConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.vmess.inbound.DetourConfig)
}
inline PROTOBUF_NDEBUG_INLINE DetourConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : to_(arena, from.to_),
        _cached_size_{0} {}

DetourConfig::DetourConfig(
    ::google::protobuf::Arena* arena,
    const DetourConfig& from)
    : ::google::protobuf::Message(arena) {
  DetourConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.proxy.vmess.inbound.DetourConfig)
}
inline PROTOBUF_NDEBUG_INLINE DetourConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : to_(arena),
        _cached_size_{0} {}

inline void DetourConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DetourConfig::~DetourConfig() {
  // @@protoc_insertion_point(destructor:xray.proxy.vmess.inbound.DetourConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DetourConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.to_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DetourConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.vmess.inbound.DetourConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.to_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DetourConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 48, 2> DetourConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DetourConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string to = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DetourConfig, _impl_.to_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string to = 1;
    {PROTOBUF_FIELD_OFFSET(DetourConfig, _impl_.to_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\2\0\0\0\0\0\0"
    "xray.proxy.vmess.inbound.DetourConfig"
    "to"
  }},
};

::uint8_t* DetourConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.vmess.inbound.DetourConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string to = 1;
  if (!this->_internal_to().empty()) {
    const std::string& _s = this->_internal_to();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.vmess.inbound.DetourConfig.to");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.vmess.inbound.DetourConfig)
  return target;
}

::size_t DetourConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.vmess.inbound.DetourConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string to = 1;
  if (!this->_internal_to().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_to());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DetourConfig::_class_data_ = {
    DetourConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DetourConfig::GetClassData() const {
  return &_class_data_;
}

void DetourConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DetourConfig*>(&to_msg);
  auto& from = static_cast<const DetourConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.vmess.inbound.DetourConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_to().empty()) {
    _this->_internal_set_to(from._internal_to());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DetourConfig::CopyFrom(const DetourConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.vmess.inbound.DetourConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DetourConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DetourConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DetourConfig::InternalSwap(DetourConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_, &other->_impl_.to_, arena);
}

::google::protobuf::Metadata DetourConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_getter, &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_once,
      file_level_metadata_proxy_2fvmess_2finbound_2fconfig_2eproto[0]);
}
// ===================================================================

class DefaultConfig::_Internal {
 public:
};

DefaultConfig::DefaultConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.vmess.inbound.DefaultConfig)
}
DefaultConfig::DefaultConfig(
    ::google::protobuf::Arena* arena, const DefaultConfig& from)
    : DefaultConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DefaultConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DefaultConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.level_ = {};
}
DefaultConfig::~DefaultConfig() {
  // @@protoc_insertion_point(destructor:xray.proxy.vmess.inbound.DefaultConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DefaultConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DefaultConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.vmess.inbound.DefaultConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.level_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DefaultConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DefaultConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DefaultConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 level = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DefaultConfig, _impl_.level_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DefaultConfig, _impl_.level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 level = 2;
    {PROTOBUF_FIELD_OFFSET(DefaultConfig, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DefaultConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.vmess.inbound.DefaultConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 level = 2;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.vmess.inbound.DefaultConfig)
  return target;
}

::size_t DefaultConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.vmess.inbound.DefaultConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 level = 2;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DefaultConfig::_class_data_ = {
    DefaultConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DefaultConfig::GetClassData() const {
  return &_class_data_;
}

void DefaultConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DefaultConfig*>(&to_msg);
  auto& from = static_cast<const DefaultConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.vmess.inbound.DefaultConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DefaultConfig::CopyFrom(const DefaultConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.vmess.inbound.DefaultConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DefaultConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DefaultConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DefaultConfig::InternalSwap(DefaultConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.level_, other->_impl_.level_);
}

::google::protobuf::Metadata DefaultConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_getter, &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_once,
      file_level_metadata_proxy_2fvmess_2finbound_2fconfig_2eproto[1]);
}
// ===================================================================

class Config::_Internal {
 public:
  using HasBits = decltype(std::declval<Config>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Config, _impl_._has_bits_);
  static const ::xray::proxy::vmess::inbound::DefaultConfig& default_(const Config* msg);
  static void set_has_default_(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::xray::proxy::vmess::inbound::DetourConfig& detour(const Config* msg);
  static void set_has_detour(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::xray::proxy::vmess::inbound::DefaultConfig& Config::_Internal::default_(const Config* msg) {
  return *msg->_impl_.default__;
}
const ::xray::proxy::vmess::inbound::DetourConfig& Config::_Internal::detour(const Config* msg) {
  return *msg->_impl_.detour_;
}
void Config::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_.Clear();
}
Config::Config(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.vmess.inbound.Config)
}
inline PROTOBUF_NDEBUG_INLINE Config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_{visibility, arena, from.user_} {}

Config::Config(
    ::google::protobuf::Arena* arena,
    const Config& from)
    : ::google::protobuf::Message(arena) {
  Config* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.default__ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::xray::proxy::vmess::inbound::DefaultConfig>(arena, *from._impl_.default__)
                : nullptr;
  _impl_.detour_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::xray::proxy::vmess::inbound::DetourConfig>(arena, *from._impl_.detour_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:xray.proxy.vmess.inbound.Config)
}
inline PROTOBUF_NDEBUG_INLINE Config::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_{visibility, arena} {}

inline void Config::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default__),
           0,
           offsetof(Impl_, detour_) -
               offsetof(Impl_, default__) +
               sizeof(Impl_::detour_));
}
Config::~Config() {
  // @@protoc_insertion_point(destructor:xray.proxy.vmess.inbound.Config)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Config::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.default__;
  delete _impl_.detour_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.vmess.inbound.Config)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.default__ != nullptr);
      _impl_.default__->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.detour_ != nullptr);
      _impl_.detour_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Config::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Config::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Config, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Config_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .xray.common.protocol.User user = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Config, _impl_.user_)}},
    // .xray.proxy.vmess.inbound.DefaultConfig default = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(Config, _impl_.default__)}},
    // .xray.proxy.vmess.inbound.DetourConfig detour = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(Config, _impl_.detour_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xray.common.protocol.User user = 1;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.user_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xray.proxy.vmess.inbound.DefaultConfig default = 2;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.default__), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xray.proxy.vmess.inbound.DetourConfig detour = 3;
    {PROTOBUF_FIELD_OFFSET(Config, _impl_.detour_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xray::common::protocol::User>()},
    {::_pbi::TcParser::GetTable<::xray::proxy::vmess::inbound::DefaultConfig>()},
    {::_pbi::TcParser::GetTable<::xray::proxy::vmess::inbound::DetourConfig>()},
  }}, {{
  }},
};

::uint8_t* Config::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.vmess.inbound.Config)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .xray.common.protocol.User user = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_user_size()); i < n; i++) {
    const auto& repfield = this->_internal_user().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .xray.proxy.vmess.inbound.DefaultConfig default = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::default_(this),
        _Internal::default_(this).GetCachedSize(), target, stream);
  }

  // .xray.proxy.vmess.inbound.DetourConfig detour = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::detour(this),
        _Internal::detour(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.vmess.inbound.Config)
  return target;
}

::size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.vmess.inbound.Config)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xray.common.protocol.User user = 1;
  total_size += 1UL * this->_internal_user_size();
  for (const auto& msg : this->_internal_user()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .xray.proxy.vmess.inbound.DefaultConfig default = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.default__);
    }

    // .xray.proxy.vmess.inbound.DetourConfig detour = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.detour_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Config::_class_data_ = {
    Config::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Config::GetClassData() const {
  return &_class_data_;
}

void Config::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Config*>(&to_msg);
  auto& from = static_cast<const Config&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.vmess.inbound.Config)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_user()->MergeFrom(
      from._internal_user());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_default_()->::xray::proxy::vmess::inbound::DefaultConfig::MergeFrom(
          from._internal_default_());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_detour()->::xray::proxy::vmess::inbound::DetourConfig::MergeFrom(
          from._internal_detour());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.vmess.inbound.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Config::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Config::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Config::InternalSwap(Config* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.user_.InternalSwap(&other->_impl_.user_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Config, _impl_.detour_)
      + sizeof(Config::_impl_.detour_)
      - PROTOBUF_FIELD_OFFSET(Config, _impl_.default__)>(
          reinterpret_cast<char*>(&_impl_.default__),
          reinterpret_cast<char*>(&other->_impl_.default__));
}

::google::protobuf::Metadata Config::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_getter, &descriptor_table_proxy_2fvmess_2finbound_2fconfig_2eproto_once,
      file_level_metadata_proxy_2fvmess_2finbound_2fconfig_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace inbound
}  // namespace vmess
}  // namespace proxy
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
