// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/trojan/config.proto

#include "proxy/trojan/config.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xray {
namespace proxy {
namespace trojan {

inline constexpr Fallback::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alpn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dest_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        xver_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Fallback::Fallback(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FallbackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FallbackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FallbackDefaultTypeInternal() {}
  union {
    Fallback _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FallbackDefaultTypeInternal _Fallback_default_instance_;

inline constexpr Account::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Account::Account(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountDefaultTypeInternal() {}
  union {
    Account _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountDefaultTypeInternal _Account_default_instance_;

inline constexpr ServerConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : users_{},
        fallbacks_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerConfig::ServerConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerConfigDefaultTypeInternal() {}
  union {
    ServerConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerConfigDefaultTypeInternal _ServerConfig_default_instance_;

inline constexpr ClientConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : server_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClientConfig::ClientConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClientConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientConfigDefaultTypeInternal() {}
  union {
    ClientConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientConfigDefaultTypeInternal _ClientConfig_default_instance_;
}  // namespace trojan
}  // namespace proxy
}  // namespace xray
static ::_pb::Metadata file_level_metadata_proxy_2ftrojan_2fconfig_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proxy_2ftrojan_2fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proxy_2ftrojan_2fconfig_2eproto = nullptr;
const ::uint32_t TableStruct_proxy_2ftrojan_2fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Account, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Account, _impl_.password_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _impl_.alpn_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _impl_.dest_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::Fallback, _impl_.xver_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::ClientConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::ClientConfig, _impl_.server_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::ServerConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::ServerConfig, _impl_.users_),
    PROTOBUF_FIELD_OFFSET(::xray::proxy::trojan::ServerConfig, _impl_.fallbacks_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xray::proxy::trojan::Account)},
        {9, -1, -1, sizeof(::xray::proxy::trojan::Fallback)},
        {23, -1, -1, sizeof(::xray::proxy::trojan::ClientConfig)},
        {32, -1, -1, sizeof(::xray::proxy::trojan::ServerConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::xray::proxy::trojan::_Account_default_instance_._instance,
    &::xray::proxy::trojan::_Fallback_default_instance_._instance,
    &::xray::proxy::trojan::_ClientConfig_default_instance_._instance,
    &::xray::proxy::trojan::_ServerConfig_default_instance_._instance,
};
const char descriptor_table_protodef_proxy_2ftrojan_2fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\031proxy/trojan/config.proto\022\021xray.proxy."
    "trojan\032\032common/protocol/user.proto\032!comm"
    "on/protocol/server_spec.proto\"\033\n\007Account"
    "\022\020\n\010password\030\001 \001(\t\"^\n\010Fallback\022\014\n\004name\030\001"
    " \001(\t\022\014\n\004alpn\030\002 \001(\t\022\014\n\004path\030\003 \001(\t\022\014\n\004type"
    "\030\004 \001(\t\022\014\n\004dest\030\005 \001(\t\022\014\n\004xver\030\006 \001(\004\"D\n\014Cl"
    "ientConfig\0224\n\006server\030\001 \003(\0132$.xray.common"
    ".protocol.ServerEndpoint\"i\n\014ServerConfig"
    "\022)\n\005users\030\001 \003(\0132\032.xray.common.protocol.U"
    "ser\022.\n\tfallbacks\030\002 \003(\0132\033.xray.proxy.troj"
    "an.FallbackBU\n\025com.xray.proxy.trojanP\001Z&"
    "github.com/xtls/xray-core/proxy/trojan\252\002"
    "\021Xray.Proxy.Trojanb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proxy_2ftrojan_2fconfig_2eproto_deps[2] =
    {
        &::descriptor_table_common_2fprotocol_2fserver_5fspec_2eproto,
        &::descriptor_table_common_2fprotocol_2fuser_2eproto,
};
static ::absl::once_flag descriptor_table_proxy_2ftrojan_2fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proxy_2ftrojan_2fconfig_2eproto = {
    false,
    false,
    506,
    descriptor_table_protodef_proxy_2ftrojan_2fconfig_2eproto,
    "proxy/trojan/config.proto",
    &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_once,
    descriptor_table_proxy_2ftrojan_2fconfig_2eproto_deps,
    2,
    4,
    schemas,
    file_default_instances,
    TableStruct_proxy_2ftrojan_2fconfig_2eproto::offsets,
    file_level_metadata_proxy_2ftrojan_2fconfig_2eproto,
    file_level_enum_descriptors_proxy_2ftrojan_2fconfig_2eproto,
    file_level_service_descriptors_proxy_2ftrojan_2fconfig_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proxy_2ftrojan_2fconfig_2eproto_getter() {
  return &descriptor_table_proxy_2ftrojan_2fconfig_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proxy_2ftrojan_2fconfig_2eproto(&descriptor_table_proxy_2ftrojan_2fconfig_2eproto);
namespace xray {
namespace proxy {
namespace trojan {
// ===================================================================

class Account::_Internal {
 public:
};

Account::Account(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.trojan.Account)
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : password_(arena, from.password_),
        _cached_size_{0} {}

Account::Account(
    ::google::protobuf::Arena* arena,
    const Account& from)
    : ::google::protobuf::Message(arena) {
  Account* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.proxy.trojan.Account)
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : password_(arena),
        _cached_size_{0} {}

inline void Account::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Account::~Account() {
  // @@protoc_insertion_point(destructor:xray.proxy.trojan.Account)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Account::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.trojan.Account)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Account::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> Account::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Account_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string password = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string password = 1;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\10\0\0\0\0\0\0"
    "xray.proxy.trojan.Account"
    "password"
  }},
};

::uint8_t* Account::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.trojan.Account)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string password = 1;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.trojan.Account.password");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.trojan.Account)
  return target;
}

::size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.trojan.Account)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string password = 1;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Account::_class_data_ = {
    Account::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Account::GetClassData() const {
  return &_class_data_;
}

void Account::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Account*>(&to_msg);
  auto& from = static_cast<const Account&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.trojan.Account)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.trojan.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Account::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Account::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Account::InternalSwap(Account* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_getter, &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_once,
      file_level_metadata_proxy_2ftrojan_2fconfig_2eproto[0]);
}
// ===================================================================

class Fallback::_Internal {
 public:
};

Fallback::Fallback(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.trojan.Fallback)
}
inline PROTOBUF_NDEBUG_INLINE Fallback::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        alpn_(arena, from.alpn_),
        path_(arena, from.path_),
        type_(arena, from.type_),
        dest_(arena, from.dest_),
        _cached_size_{0} {}

Fallback::Fallback(
    ::google::protobuf::Arena* arena,
    const Fallback& from)
    : ::google::protobuf::Message(arena) {
  Fallback* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.xver_ = from._impl_.xver_;

  // @@protoc_insertion_point(copy_constructor:xray.proxy.trojan.Fallback)
}
inline PROTOBUF_NDEBUG_INLINE Fallback::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        alpn_(arena),
        path_(arena),
        type_(arena),
        dest_(arena),
        _cached_size_{0} {}

inline void Fallback::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.xver_ = {};
}
Fallback::~Fallback() {
  // @@protoc_insertion_point(destructor:xray.proxy.trojan.Fallback)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Fallback::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.alpn_.Destroy();
  _impl_.path_.Destroy();
  _impl_.type_.Destroy();
  _impl_.dest_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Fallback::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.trojan.Fallback)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.alpn_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.dest_.ClearToEmpty();
  _impl_.xver_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Fallback::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 55, 2> Fallback::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Fallback_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Fallback, _impl_.name_)}},
    // string alpn = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Fallback, _impl_.alpn_)}},
    // string path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Fallback, _impl_.path_)}},
    // string type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Fallback, _impl_.type_)}},
    // string dest = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Fallback, _impl_.dest_)}},
    // uint64 xver = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Fallback, _impl_.xver_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Fallback, _impl_.xver_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Fallback, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string alpn = 2;
    {PROTOBUF_FIELD_OFFSET(Fallback, _impl_.alpn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 3;
    {PROTOBUF_FIELD_OFFSET(Fallback, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 4;
    {PROTOBUF_FIELD_OFFSET(Fallback, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dest = 5;
    {PROTOBUF_FIELD_OFFSET(Fallback, _impl_.dest_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 xver = 6;
    {PROTOBUF_FIELD_OFFSET(Fallback, _impl_.xver_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\32\4\4\4\4\4\0\0"
    "xray.proxy.trojan.Fallback"
    "name"
    "alpn"
    "path"
    "type"
    "dest"
  }},
};

::uint8_t* Fallback::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.trojan.Fallback)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.trojan.Fallback.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string alpn = 2;
  if (!this->_internal_alpn().empty()) {
    const std::string& _s = this->_internal_alpn();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.trojan.Fallback.alpn");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string path = 3;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.trojan.Fallback.path");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string type = 4;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.trojan.Fallback.type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string dest = 5;
  if (!this->_internal_dest().empty()) {
    const std::string& _s = this->_internal_dest();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xray.proxy.trojan.Fallback.dest");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // uint64 xver = 6;
  if (this->_internal_xver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_xver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.trojan.Fallback)
  return target;
}

::size_t Fallback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.trojan.Fallback)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string alpn = 2;
  if (!this->_internal_alpn().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_alpn());
  }

  // string path = 3;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // string type = 4;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // string dest = 5;
  if (!this->_internal_dest().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dest());
  }

  // uint64 xver = 6;
  if (this->_internal_xver() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_xver());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Fallback::_class_data_ = {
    Fallback::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Fallback::GetClassData() const {
  return &_class_data_;
}

void Fallback::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Fallback*>(&to_msg);
  auto& from = static_cast<const Fallback&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.trojan.Fallback)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_alpn().empty()) {
    _this->_internal_set_alpn(from._internal_alpn());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_dest().empty()) {
    _this->_internal_set_dest(from._internal_dest());
  }
  if (from._internal_xver() != 0) {
    _this->_internal_set_xver(from._internal_xver());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Fallback::CopyFrom(const Fallback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.trojan.Fallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Fallback::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Fallback::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Fallback::InternalSwap(Fallback* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alpn_, &other->_impl_.alpn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dest_, &other->_impl_.dest_, arena);
        swap(_impl_.xver_, other->_impl_.xver_);
}

::google::protobuf::Metadata Fallback::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_getter, &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_once,
      file_level_metadata_proxy_2ftrojan_2fconfig_2eproto[1]);
}
// ===================================================================

class ClientConfig::_Internal {
 public:
};

void ClientConfig::clear_server() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.server_.Clear();
}
ClientConfig::ClientConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.trojan.ClientConfig)
}
inline PROTOBUF_NDEBUG_INLINE ClientConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : server_{visibility, arena, from.server_},
        _cached_size_{0} {}

ClientConfig::ClientConfig(
    ::google::protobuf::Arena* arena,
    const ClientConfig& from)
    : ::google::protobuf::Message(arena) {
  ClientConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.proxy.trojan.ClientConfig)
}
inline PROTOBUF_NDEBUG_INLINE ClientConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : server_{visibility, arena},
        _cached_size_{0} {}

inline void ClientConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientConfig::~ClientConfig() {
  // @@protoc_insertion_point(destructor:xray.proxy.trojan.ClientConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClientConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ClientConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.trojan.ClientConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ClientConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ClientConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ClientConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .xray.common.protocol.ServerEndpoint server = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientConfig, _impl_.server_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xray.common.protocol.ServerEndpoint server = 1;
    {PROTOBUF_FIELD_OFFSET(ClientConfig, _impl_.server_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xray::common::protocol::ServerEndpoint>()},
  }}, {{
  }},
};

::uint8_t* ClientConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.trojan.ClientConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .xray.common.protocol.ServerEndpoint server = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_server_size()); i < n; i++) {
    const auto& repfield = this->_internal_server().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.trojan.ClientConfig)
  return target;
}

::size_t ClientConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.trojan.ClientConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xray.common.protocol.ServerEndpoint server = 1;
  total_size += 1UL * this->_internal_server_size();
  for (const auto& msg : this->_internal_server()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ClientConfig::_class_data_ = {
    ClientConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ClientConfig::GetClassData() const {
  return &_class_data_;
}

void ClientConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ClientConfig*>(&to_msg);
  auto& from = static_cast<const ClientConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.trojan.ClientConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_server()->MergeFrom(
      from._internal_server());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientConfig::CopyFrom(const ClientConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.trojan.ClientConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ClientConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ClientConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ClientConfig::InternalSwap(ClientConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.server_.InternalSwap(&other->_impl_.server_);
}

::google::protobuf::Metadata ClientConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_getter, &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_once,
      file_level_metadata_proxy_2ftrojan_2fconfig_2eproto[2]);
}
// ===================================================================

class ServerConfig::_Internal {
 public:
};

void ServerConfig::clear_users() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.users_.Clear();
}
ServerConfig::ServerConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xray.proxy.trojan.ServerConfig)
}
inline PROTOBUF_NDEBUG_INLINE ServerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : users_{visibility, arena, from.users_},
        fallbacks_{visibility, arena, from.fallbacks_},
        _cached_size_{0} {}

ServerConfig::ServerConfig(
    ::google::protobuf::Arena* arena,
    const ServerConfig& from)
    : ::google::protobuf::Message(arena) {
  ServerConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:xray.proxy.trojan.ServerConfig)
}
inline PROTOBUF_NDEBUG_INLINE ServerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : users_{visibility, arena},
        fallbacks_{visibility, arena},
        _cached_size_{0} {}

inline void ServerConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:xray.proxy.trojan.ServerConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:xray.proxy.trojan.ServerConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.users_.Clear();
  _impl_.fallbacks_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ServerConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .xray.proxy.trojan.Fallback fallbacks = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ServerConfig, _impl_.fallbacks_)}},
    // repeated .xray.common.protocol.User users = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServerConfig, _impl_.users_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xray.common.protocol.User users = 1;
    {PROTOBUF_FIELD_OFFSET(ServerConfig, _impl_.users_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xray.proxy.trojan.Fallback fallbacks = 2;
    {PROTOBUF_FIELD_OFFSET(ServerConfig, _impl_.fallbacks_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xray::common::protocol::User>()},
    {::_pbi::TcParser::GetTable<::xray::proxy::trojan::Fallback>()},
  }}, {{
  }},
};

::uint8_t* ServerConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xray.proxy.trojan.ServerConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .xray.common.protocol.User users = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_users_size()); i < n; i++) {
    const auto& repfield = this->_internal_users().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .xray.proxy.trojan.Fallback fallbacks = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fallbacks_size()); i < n; i++) {
    const auto& repfield = this->_internal_fallbacks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xray.proxy.trojan.ServerConfig)
  return target;
}

::size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xray.proxy.trojan.ServerConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xray.common.protocol.User users = 1;
  total_size += 1UL * this->_internal_users_size();
  for (const auto& msg : this->_internal_users()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .xray.proxy.trojan.Fallback fallbacks = 2;
  total_size += 1UL * this->_internal_fallbacks_size();
  for (const auto& msg : this->_internal_fallbacks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServerConfig::_class_data_ = {
    ServerConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServerConfig::GetClassData() const {
  return &_class_data_;
}

void ServerConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServerConfig*>(&to_msg);
  auto& from = static_cast<const ServerConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xray.proxy.trojan.ServerConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_users()->MergeFrom(
      from._internal_users());
  _this->_internal_mutable_fallbacks()->MergeFrom(
      from._internal_fallbacks());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xray.proxy.trojan.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerConfig::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServerConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServerConfig::InternalSwap(ServerConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.users_.InternalSwap(&other->_impl_.users_);
  _impl_.fallbacks_.InternalSwap(&other->_impl_.fallbacks_);
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_getter, &descriptor_table_proxy_2ftrojan_2fconfig_2eproto_once,
      file_level_metadata_proxy_2ftrojan_2fconfig_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace trojan
}  // namespace proxy
}  // namespace xray
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
